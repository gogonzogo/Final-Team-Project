{"version":3,"file":"static/js/42.9600c30e.chunk.js","mappings":"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","sources":["webpack://final-team-project/./src/components/CaloriesCalc/CaloriesCalc.module.css?baa3","webpack://final-team-project/./src/components/Modal/modal.module.css?1a55","components/Modal/Modal.jsx","components/CaloriesCalc/CaloriesCalc.jsx","webpack://final-team-project/./src/components/RightSideBar/rightSideBar.module.css?edd3","components/RightSideBar/RightSideBar.jsx","pages/Calculator/Calculator.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"CaloriesCalc_section__WB2nl\",\"calcWrapper\":\"CaloriesCalc_calcWrapper__AcODC\",\"heading\":\"CaloriesCalc_heading__fAzfD\",\"formdiv\":\"CaloriesCalc_formdiv__+a6k+\",\"calcform\":\"CaloriesCalc_calcform__iDf5l\",\"positionWrapper\":\"CaloriesCalc_positionWrapper__+O-50\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalBox\":\"modal_modalBox__UnNX8\",\"closeButton\":\"modal_closeButton__hYa4+\",\"backButtonMobbile\":\"modal_backButtonMobbile__r5QHQ\",\"back\":\"modal_back__V8JNM\",\"modalTitle\":\"modal_modalTitle__3zeL5\",\"totalCaloriesNumber\":\"modal_totalCaloriesNumber__bUxLg\",\"totalCalories\":\"modal_totalCalories__U80Ut\",\"notEat\":\"modal_notEat__P-szP\",\"hr\":\"modal_hr__CzLPQ\",\"text2\":\"modal_text2__9c6ek\",\"notEatItem\":\"modal_notEatItem__hXM4C\",\"buttonWrapper\":\"modal_buttonWrapper__NZCpm\",\"button\":\"modal_button__GRC0s\"};","import {\n  Backdrop,\n  Box,\n  Button,\n  Fade,\n  Modal as MaterialModal,\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport s from './modal.module.css';\n\nconst Modal = props => {\n  const { handleClose, modalState } = props;\n  return (\n    <MaterialModal\n      open={modalState.open}\n      onClose={handleClose}\n      closeAfterTransition\n      slots={{ backdrop: Backdrop }}\n      slotProps={{\n        backdrop: {\n          timeout: 500,\n          sx: { backgroundColor: '#2121211f' },\n        },\n      }}\n    >\n      <Fade in={modalState.open}>\n        <Box>\n          <div className={s.backButtonMobbile}>\n            <span className={s.back} onClick={handleClose}>\n              ⏎\n            </span>\n          </div>\n          <div className={s.modalBox}>\n            <span className={s.closeButton} onClick={handleClose}>\n              ✕\n            </span>\n            <p className={s.modalTitle}>\n              Your recommended daily\n              <br /> calorie intake is\n            </p>\n            <b className={s.totalCalories}>\n              <span className={s.totalCaloriesNumber}>\n                {Math.round(modalState.totalCalories)}{' '}\n              </span>\n              kcal\n            </b>\n            <div className={s.notEat}>\n              <hr className={s.hr} />\n              <b className={s.text2}>Foods you should not eat</b>\n              <ol>\n                {modalState.foodNotToEat.map(listItem => (\n                  <li className={s.notEatItem} key={listItem}>\n                    {listItem}\n                  </li>\n                ))}\n              </ol>\n              <Link to=\"Login\" className={s.buttonWrapper}>\n                <Button className={s.button} variant=\"contained\">\n                  Start losing weight\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </Box>\n      </Fade>\n    </MaterialModal>\n  );\n};\nexport default Modal;\n","import React from 'react';\nimport css from './CaloriesCalc.module.css';\nimport { useState } from 'react';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n// import FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Modal from 'components/Modal/Modal';\n\nconst CaloriesCalc = () => {\n  const [modalState, setModalState] = useState({\n    open: false,\n    totalCalories: null,\n    foodNotToEat: [],\n  }); //modal state and setters\n\n  const handleOpen = totalCalories => {\n    setModalState({\n      open: true,\n      totalCalories: totalCalories,\n      foodNotToEat: ['give', 'me', 'food'], //  change me\n    });\n  };\n  const handleClose = () => {\n    setModalState(prev => {\n      return {\n        ...prev,\n        open: false,\n      };\n    });\n    setTimeout(() => {\n      // fixing effect, when during closing modal you see 0 kcal recommended daily calorie intake\n      setModalState({ open: false, totalCalories: null, foodNotToEat: [] });\n    }, 250);\n  };\n\n  const [stats, setStats] = useState({\n    height: '',\n    age: '',\n    currentWeight: '',\n    desiredWeight: '',\n    bloodType: '',\n  });\n  const { height, age, currentWeight, desiredWeight, bloodType } = stats;\n\n  const changeHandler = e => {\n    setStats({ ...stats, [e.target.name]: [e.target.value] });\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const totalCalories =\n      10 * currentWeight +\n      6.25 * height -\n      5 * age -\n      161 -\n      10 * (currentWeight - currentWeight);\n    console.log(height);\n    console.log(age);\n    console.log(currentWeight);\n    console.log(desiredWeight);\n    console.log(bloodType);\n    console.log(totalCalories);\n\n    handleOpen(totalCalories); // give me food\n  };\n\n  return (\n    <>\n      <div className={css.positionWrapper}>\n        <div className={css.section}>\n          <div className={css.calcWrapper}>\n            <h1 className={css.heading}>Calculate your daily calorie</h1>\n            <h1 className={css.heading}>intake right now</h1>\n\n            <form className={css.calcform} onSubmit={submitHandler}>\n              <div className={css.formdiv}>\n                <TextField\n                  sx={{\n                    fontFamily: 'Verdana',\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    lineHeight: '17px',\n                    letterSpacing: '0.04em',\n                    textAlign: 'left',\n                    width: '240px',\n                    paddingRight: '32px',\n                  }}\n                  type=\"tel\"\n                  inputprops={{ inputprops: { min: 122, max: 214 } }}\n                  label=\"Height\"\n                  variant=\"standard\"\n                  onChange={changeHandler}\n                  value={height}\n                  name=\"height\"\n                  required\n                  error={height !== '' && (height < 122 || height > 214)}\n                  helperText={\n                    height !== '' && (height < 122 || height > 214)\n                      ? 'Height must be between 122cm and 214cm.'\n                      : ' '\n                  }\n                />\n                <TextField\n                  sx={{\n                    fontFamily: 'Verdana',\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    lineHeight: '17px',\n                    letterSpacing: '0.04em',\n                    textAlign: 'left',\n                    width: '240px',\n                    paddingRight: '32px',\n                  }}\n                  type=\"tel\"\n                  inputprops={{ inputprops: { min: 18, max: 80 } }}\n                  label=\"Age\"\n                  variant=\"standard\"\n                  onChange={changeHandler}\n                  value={age}\n                  name=\"age\"\n                  required\n                  error={age !== '' && (age < 18 || age > 80)}\n                  helperText={\n                    age !== '' && (age < 18 || age > 80)\n                      ? 'Age must be between 18 and 80.'\n                      : ' '\n                  }\n                />\n                <TextField\n                  sx={{\n                    fontFamily: 'Verdana',\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    lineHeight: '17px',\n                    letterSpacing: '0.04em',\n                    textAlign: 'left',\n                    width: '240px',\n                    paddingRight: '32px',\n                  }}\n                  type=\"tel\"\n                  inputprops={{ inputprops: { min: 34, max: 181 } }}\n                  label=\"Current Weight\"\n                  variant=\"standard\"\n                  onChange={changeHandler}\n                  value={currentWeight}\n                  name=\"currentWeight\"\n                  error={\n                    currentWeight !== '' &&\n                    (currentWeight < 34 || currentWeight > 181)\n                  }\n                  helperText={\n                    currentWeight !== '' &&\n                    (currentWeight < 34 || currentWeight > 181)\n                      ? 'Current Weight must be between 34kg and 181kg.'\n                      : ' '\n                  }\n                  required\n                />\n              </div>\n              <div className={css.formdiv}>\n                <TextField\n                  sx={{\n                    fontFamily: 'Verdana',\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    lineHeight: '17px',\n                    letterSpacing: '0.04em',\n                    textAlign: 'left',\n                    width: '240px',\n                    paddingRight: '32px',\n                  }}\n                  type=\"tel\"\n                  inputprops={{ inputprops: { min: 34, max: 181 } }}\n                  label=\"Desired Weight\"\n                  variant=\"standard\"\n                  onChange={changeHandler}\n                  value={desiredWeight}\n                  name=\"desiredWeight\"\n                  required\n                  error={\n                    desiredWeight !== '' &&\n                    (desiredWeight < 34 ||\n                      desiredWeight > 181 ||\n                      desiredWeight > currentWeight)\n                  }\n                  helperText={\n                    desiredWeight !== '' &&\n                    (desiredWeight < 34 ||\n                      desiredWeight > 181 ||\n                      desiredWeight > currentWeight)\n                      ? 'Desired Weight must be between 34kg and 181kg. & less then current weight'\n                      : ' '\n                  }\n                />\n                <FormLabel id=\"demo-radio-buttons-group-label\">\n                  Blood Type\n                </FormLabel>\n\n                <RadioGroup\n                  aria-labelledby=\"demo-controlled-radio-buttons-group\"\n                  value={bloodType}\n                  name=\"bloodType\"\n                  sx={{\n                    '&, &.Mui-checked': {\n                      color: '#FC842D',\n                    },\n                    flexDirection: 'row',\n                  }}\n                  onChange={changeHandler}\n                  required\n                >\n                  <FormControlLabel\n                    value=\"A\"\n                    control={<Radio />}\n                    label=\"A\"\n                    sx={{\n                      color: '#E0E0E0',\n                      '&.Mui-checked': {\n                        color: '#FC842D',\n                      },\n                    }}\n                  />\n                  <FormControlLabel\n                    value=\"B\"\n                    control={<Radio />}\n                    label=\"B\"\n                    sx={{\n                      color: '#E0E0E0',\n                      '&.Mui-checked': {\n                        color: '#FC842D',\n                      },\n                    }}\n                  />\n                  <FormControlLabel\n                    value=\"AB\"\n                    control={<Radio />}\n                    label=\"AB\"\n                    sx={{\n                      color: '#E0E0E0',\n                      '&.Mui-checked': {\n                        color: '#FC842D',\n                      },\n                    }}\n                  />\n                  <FormControlLabel\n                    value=\"O\"\n                    control={<Radio />}\n                    label=\"O\"\n                    sx={{\n                      color: '#E0E0E0',\n                      '&.Mui-checked': {\n                        color: 'rgba(252, 132, 45, 1)',\n                      },\n                    }}\n                  />\n                </RadioGroup>\n              </div>\n\n              <Button\n                sx={{\n                  margin: '40px 0',\n                  backgroundColor: '#FC842D',\n                  width: '210px',\n                  height: '43px',\n                  dropShadow: '50% #FC842D80',\n                  borderRadius: '30px',\n                  fontFamily: 'Verdana',\n                  fontSize: '14px',\n                  fontWeight: '700',\n                  lineHeight: '17px',\n                  letterSpacing: '0.04em',\n                  textAlign: 'center',\n                  color: '#FFFFFF',\n                }}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Start losing weight\n              </Button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <Modal handleClose={handleClose} modalState={modalState} />\n    </>\n  );\n};\n\nexport default CaloriesCalc;\n","// extracted by mini-css-extract-plugin\nexport default {\"sideBarContainer\":\"rightSideBar_sideBarContainer__rWrUX\",\"sideBarTitle\":\"rightSideBar_sideBarTitle__1pky6\",\"statsBox\":\"rightSideBar_statsBox__0Xanq\",\"statsBoxItem\":\"rightSideBar_statsBoxItem__Vk8lb\",\"sideBarContent\":\"rightSideBar_sideBarContent__TIFBc\"};","import s from './rightSideBar.module.css';\n\nconst RightSideBar = () => {\n  return (\n    <div className={s.sideBarContainer}>\n      <div className={s.sideBarContent}>\n        <p className={s.sideBarTitle}>Your stats:</p>\n        <ul className={s.statsBox}>\n          <li className={s.statsBoxItem}>\n            <p>Height, cm</p>\n            <p>12</p>\n          </li>\n          <li className={s.statsBoxItem}>\n            <p>Age</p>\n            <p>12</p>\n          </li>\n          <li className={s.statsBoxItem}>\n            <p>Current weight, kg</p>\n            <p>12</p>\n          </li>\n          <li className={s.statsBoxItem}>\n            <p>Desired weight, kg</p>\n            <p>12</p>\n          </li>\n          <li className={s.statsBoxItem}>\n            <p>Blood type</p>\n            <p>A</p>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\nexport default RightSideBar;\n","import React from 'react';\n// import NotAllowedProducts from 'components/ProductsList/NotAllowedProducts/NotAllowedProducts';\n\nimport RightSideBar from 'components/RightSideBar/RightSideBar';\nimport CaloriesCalc from 'components/CaloriesCalc/CaloriesCalc';\n\nfunction Calculator() {\n  return (\n    <div className=\"background mainBackground\">\n      <CaloriesCalc />\n      {/* <NotAllowedProducts />\n       */}\n      <RightSideBar />\n    </div>\n  );\n}\n\nexport default Calculator;\n"],"names":["props","handleClose","modalState","open","onClose","closeAfterTransition","slots","backdrop","Backdrop","slotProps","timeout","sx","backgroundColor","Fade","in","Box","className","s","onClick","Math","round","totalCalories","foodNotToEat","map","listItem","to","Button","variant","useState","setModalState","height","age","currentWeight","desiredWeight","bloodType","stats","setStats","changeHandler","e","target","name","value","css","onSubmit","preventDefault","console","log","handleOpen","TextField","fontFamily","fontSize","fontWeight","lineHeight","letterSpacing","textAlign","width","paddingRight","type","inputprops","min","max","label","onChange","required","error","helperText","FormLabel","id","RadioGroup","color","flexDirection","FormControlLabel","control","Radio","margin","dropShadow","borderRadius","prev","setTimeout","CaloriesCalc"],"sourceRoot":""}