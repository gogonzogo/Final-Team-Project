{"version":3,"file":"static/js/357.da39498e.chunk.js","mappings":"sOACA,EAA0B,8BAA1B,EAAsE,kCAAtE,EAAkH,8BAAlH,EAA0J,8BAA1J,EAAmM,+BAAnM,EAAoP,sC,0ICApP,EAA2B,wBAA3B,EAAiE,2BAAjE,EAAgH,iCAAhH,EAAwJ,oBAAxJ,EAAyL,0BAAzL,EAAyO,mCAAzO,EAA4R,6BAA5R,EAAkU,sBAAlU,EAA6V,kBAA7V,EAAuX,qBAAvX,EAAyZ,0BAAzZ,EAAmc,6BAAnc,EAAye,sB,SCmEze,EA1Dc,SAAAA,GACZ,IAAQC,EAA4BD,EAA5BC,YAAaC,EAAeF,EAAfE,WACrB,OACE,SAAC,IAAD,CACEC,KAAMD,EAAWC,KACjBC,QAASH,EACTI,sBAAoB,EACpBC,MAAO,CAAEC,SAAUC,EAAAA,GACnBC,UAAW,CACTF,SAAU,CACRG,QAAS,IACTC,GAAI,CAAEC,gBAAiB,eAR7B,UAYE,SAACC,EAAA,EAAD,CAAMC,GAAIZ,EAAWC,KAArB,UACE,UAACY,EAAA,EAAD,YACE,gBAAKC,UAAWC,EAAhB,UACE,iBAAMD,UAAWC,EAAQC,QAASjB,EAAlC,SAA+C,cAIjD,iBAAKe,UAAWC,EAAhB,WACE,iBAAMD,UAAWC,EAAeC,QAASjB,EAAzC,SAAsD,YAGtD,eAAGe,UAAWC,EAAd,UAA4B,0BAE1B,kBAAM,yBAER,eAAGD,UAAWC,EAAd,WACE,kBAAMD,UAAWC,EAAjB,UACGE,KAAKC,MAAMlB,EAAWmB,eAAgB,OAClC,WAGT,iBAAKL,UAAWC,EAAhB,WACE,eAAID,UAAWC,KACf,cAAGD,UAAWC,EAAd,SAAuB,8BACvB,wBACGf,EAAWoB,aAAaC,KAAI,SAAAC,GAAQ,OACnC,eAAIR,UAAWC,EAAf,SACGO,GAD+BA,EADC,OAMvC,SAAC,KAAD,CAAMC,GAAG,QAAQT,UAAWC,EAA5B,UACE,SAACS,EAAA,EAAD,CAAQV,UAAWC,EAAUU,QAAQ,YAArC,SAAiD,sCAUhE,E,8BCogBD,EAnjBqB,WACnB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUC,aAApB,IAC/BC,GAAWJ,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUG,UAApB,IAC5BC,GAAeN,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUK,cAApB,IAChCC,GAAeR,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUO,cAApB,IAChCC,GAAaV,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUS,YAApB,IAC9BC,KAAcb,GAAeK,GAAYE,GAAgBE,GAAgBE,GAEzEG,GAAkBb,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUY,iBAApB,IACnCC,GAAkBf,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUc,iBAApB,IACnCC,GAAkBjB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUgB,iBAApB,IACnCC,GAAkBnB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUkB,iBAApB,IACnCC,KAAsBR,GAAmBE,GAAmBX,GAAYa,GAAmBE,GAAmBT,GAE9GY,GAActB,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMsB,YAAYC,KAA7B,IAEhC,GAAgDC,EAAAA,EAAAA,UAAS,CACvDC,QAAQ,EACRC,KAAK,EACLC,eAAe,EACfC,eAAe,EACfC,WAAW,IALb,eAAOC,EAAP,KAAyBC,EAAzB,KAQA,GAA8CP,EAAAA,EAAAA,UAAS,GAAvD,eAAOQ,EAAP,KAAwBC,EAAxB,KAKA,GAAwCT,EAAAA,EAAAA,UAAS,MAAjD,eAAOU,EAAP,KAAqBC,EAArB,KAOQC,GAAiBrC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMC,UAAUmC,cAA3B,IAGrC,GAAoCZ,EAAAA,EAAAA,UAAS,CAC3CrD,MAAM,EACNkB,cAAe,KACfC,aAAc,KAHhB,eAAOpB,GAAP,KAAmBmE,GAAnB,KAMMC,GAAa,SAAAjD,GACjBgD,GAAc,CACZlE,MAAM,EACNkB,cAAeA,EACfC,aAAc,CAAC,OAAQ,KAAM,SAEhC,EAcD,IAAgCkC,EAAAA,EAAAA,UAAS,CACtCe,OAAQlB,EAAYkB,OACrBb,IAAKL,EAAYK,IACjBC,cAAeN,EAAYM,cAC3BC,cAAeP,EAAYO,cAC3BC,UAAWR,EAAYQ,UACvBW,WAAYnB,EAAYmB,WACxBC,WAAYpB,EAAYoB,WACxBC,iBAAkBrB,EAAYqB,iBAC9BC,iBAAkBtB,EAAYsB,mBAThC,iBAAOC,GAAP,MAAiBC,GAAjB,MAYMC,GAAgB,SAAAC,GACxB,IA/CiCC,EAAWC,EA+C5C,EAAwBF,EAAEG,OAAlBC,EAAR,EAAQA,KAAM5B,EAAd,EAAcA,MAKZ,OAJEsB,IAAY,kBACPD,IADM,cAERO,EAAO5B,KAEJ4B,GACN,IAAK,SACDvD,GAASwD,EAAAA,EAAAA,IAAe,CAAEC,WAAY9B,KACpC,MACJ,IAAK,aACH3B,GAAS0D,EAAAA,EAAAA,IAAmB,CAAED,WAAY9B,KAC5C,MACA,IAAK,aACH3B,GAAS2D,EAAAA,EAAAA,GAAmB,CAAEF,WAAY9B,KACxC,MACN,IAAK,MACH3B,GAAS4D,EAAAA,EAAAA,IAAY,CAAEH,WAAY9B,KACjC,MACJ,IAAK,gBACH3B,GAAS6D,EAAAA,EAAAA,IAAgB,CAAEJ,WAAY9B,KACvC,MACF,IAAK,mBACH3B,GAAS8D,EAAAA,EAAAA,IAAmB,CAAEL,WAAY9B,KACxC,MACJ,IAAK,gBACH3B,GAAS+D,EAAAA,EAAAA,IAAgB,CAAEN,WAAY9B,KACvC,MACD,IAAK,mBACJ3B,GAASgE,EAAAA,EAAAA,IAAmB,CAAEP,WAAY9B,KAC1C,MACF,IAAK,YACH3B,GAASiE,EAAAA,EAAAA,IAAc,CAAER,WAAY9B,KAKvC,GAAwB,IAApBS,EAAuB,CACzB,IAAOQ,EAA8DI,GAA9DJ,WAAYC,EAAkDG,GAAlDH,WAAYC,EAAsCE,GAAtCF,iBAAkBC,EAAoBC,GAApBD,iBAC/CE,IAAY,SAAAD,GACd,OAAO,kBAAIA,GAAX,IAAqBL,OAA2C,MAArB,GAAZC,EAA4B,EAAXC,GAAuBd,cAAkC,KAAnBe,EAAyBd,cAAgC,KAAjBe,GAC3H,GACN,CACCR,EAAgBgB,GAzFaH,EA0FPG,EA1FkBF,GA0FZ,EAzF5BlB,GAAoB,kBAAKD,GAAN,cAAyBkB,EAAYC,IA0FzD,EAEKa,GAAwB,WAC5B,OACE,SAACC,EAAA,EAAD,CACEC,eAAgB5B,EAAeF,GAC/Be,UAAWf,GAGhB,EAEK+B,GAAa,mCAAG,WAAMlB,GAAN,4FACpBA,EAAEmB,iBACsB,IAApBlC,EAFgB,uBAGbQ,EAA8DI,GAA9DJ,WAAYC,EAAkDG,GAAlDH,WAAYC,EAAsCE,GAAtCF,iBAAkBC,EAAoBC,GAApBD,iBAH7B,SAIbE,IAAY,SAAAD,GACnB,OAAO,kBAAIA,GAAX,IAAqBL,OAA2C,MAArB,GAAZC,EAA4B,EAAXC,GAAuBd,cAAkC,KAAnBe,EAAyBd,cAAgC,KAAjBe,GAC3H,IANiB,OASbJ,EAAwDK,GAAxDL,OAAQb,EAAgDkB,GAAhDlB,IAAKC,EAA2CiB,GAA3CjB,cAAeC,EAA4BgB,GAA5BhB,cAAeC,EAAae,GAAbf,UAC5CxC,EACJ,GAAKsC,EACL,KAAOY,EACP,EAAIb,EACJ,IACA,IAAMC,EAAgBC,GAE5BhC,GAASuE,EAAAA,EAAAA,IAAe,CAAC5B,OAAQA,EAAQb,IAAKA,EAAKC,cAAeA,EAAeC,cAAeA,EAAeC,UAAWA,KAEtHS,GAAWjD,GAnBS,2CAAH,sDAsBnB,OACE,iCACE,gBAAKL,UAAWoF,EAAhB,UACE,gBAAKpF,UAAWoF,EAAhB,UACE,iBAAKpF,UAAWoF,EAAhB,WACE,eAAIpF,UAAWoF,EAAf,SAA4B,kCAC5B,eAAIpF,UAAWoF,EAAf,SAA4B,sBAE5B,UAACC,EAAA,EAAD,CAAM9C,MAAOS,EAAiBsC,SAzIhB,SAACvB,EAAGwB,GAC1BtC,EAAmBsC,EACpB,EAuIkE5F,GAAM,CAAC,WAAY,CAAC6F,MAAO,QAAQC,aAAc,EAAG7F,gBAAiB,UAAW8F,UAAW,OAAQC,YAAa,QACtK,iBAAkB,CAACH,MAAO,QAASI,WAAY,UAAWC,WAAY,MADzE,WAEJ,SAACC,EAAA,EAAD,CAAKC,MAAM,YACX,SAACD,EAAA,EAAD,CAAKC,MAAM,mBAIQ,IAApB/C,IACK,kBAAMhD,UAAWoF,EAAcY,SAAUf,GAAzC,WACE,iBAAKjF,UAAWoF,EAAhB,WACE,SAACa,EAAA,EAAD,CACEtG,GAAI,CAAE,uCAAwC,CAC1D,eAAgB,CACtBuG,YAAa,WAGOC,WAAY,UACZC,SAAU,OACVP,WAAY,MACZQ,WAAY,OACZC,cAAe,SACfC,UAAW,OACVC,MAAO,QACPC,aAAc,QAEHC,gBAAiB,CAAEC,MAAO,CAAEnB,MAAO,YAEjDoB,KAAK,MACLC,WAAY,CAAEA,WAAY,CAAEC,IAAK,IAAKC,IAAK,MAC3ChB,MAAM,WACJpF,QAAQ,WACV2E,SAAUxB,GACVvB,MAAOqB,GAASL,OAChBY,KAAK,SACT6C,QAAS,kBAAM7D,EAAgB,SAAtB,EACT8D,OAAQ,kBAAM9D,EAAgB,KAAtB,KAEN,SAAC8C,EAAA,EAAD,CACEtG,GAAI,CACFwG,WAAY,UACZC,SAAU,OACVP,WAAY,MACZQ,WAAY,OACZC,cAAe,SACfC,UAAW,OACXC,MAAO,QACPC,aAAc,QAEhBC,gBAAiB,CAAEC,MAAO,CAAEnB,MAAO,YACnCoB,KAAK,MACLC,WAAY,CAAEA,WAAY,CAAEC,IAAK,GAAIC,IAAK,KAC1ChB,MAAM,MACNpF,QAAQ,WACR2E,SAAUxB,GACVvB,MAAOqB,GAASlB,IAChByB,KAAK,MACL6C,QAAS,kBAAM7D,EAAgB,MAAtB,EACb8D,OAAQ,kBAAM9D,EAAgB,KAAtB,KAEN,SAAC8C,EAAA,EAAD,CACEtG,GAAI,CACFwG,WAAY,UACZC,SAAU,OACVP,WAAY,MACZQ,WAAY,OACZC,cAAe,SACfC,UAAW,OACXC,MAAO,QACPC,aAAc,QAEFC,gBAAiB,CAAEC,MAAO,CAAEnB,MAAO,YAEjDoB,KAAK,MACLC,WAAY,CAAEA,WAAY,CAAEC,IAAK,GAAIC,IAAK,MAC1ChB,MAAM,iBACNpF,QAAQ,WACR2E,SAAUxB,GACVvB,MAAOqB,GAASjB,cAChBwB,KAAK,gBACL6C,QAAS,kBAAM7D,EAAgB,gBAAtB,EACb8D,OAAQ,kBAAM9D,EAAgB,KAAtB,QAGR,iBAAKnD,UAAWoF,EAAhB,WACE,SAACa,EAAA,EAAD,CACEtG,GAAI,CACFwG,WAAY,UACZC,SAAU,OACVP,WAAY,MACZQ,WAAY,OACZC,cAAe,SACfC,UAAW,OACXC,MAAO,QACPC,aAAc,QAEFC,gBAAiB,CAAEC,MAAO,CAAEnB,MAAO,YAEjDoB,KAAK,MACLC,WAAY,CAAEA,WAAY,CAAEC,IAAK,GAAIC,IAAK,MAC1ChB,MAAM,iBACNpF,QAAQ,WACR2E,SAAUxB,GACVvB,MAAOqB,GAAShB,cAChBuB,KAAK,gBACL6C,QAAS,kBAAM7D,EAAgB,gBAAtB,EACb8D,OAAQ,kBAAM9D,EAAgB,KAAtB,KAEN,SAAC+D,EAAA,EAAD,CAAWC,GAAG,iCAAd,SAA+C,gBAI/C,UAACC,EAAA,EAAD,CACE,kBAAgB,sCAChB7E,MAAOqB,GAASf,UAChBsB,KAAK,YACLxE,GAAI,CACF0H,cAAe,OAEjB/B,SAAUxB,GACdkD,QAAS,kBAAM7D,EAAgB,YAAtB,EACT8D,OAAQ,kBAAM9D,EAAgB,KAAtB,EATN,WAWE,SAACmE,EAAA,EAAD,CACE/E,MAAM,IACNgF,SAAS,SAACC,EAAA,EAAD,CAAQ7H,GAAI,CAC/B,gBAAiB,CACf6F,MAAO,cAGCO,MAAM,OAER,SAACuB,EAAA,EAAD,CACE/E,MAAM,IACNgF,SAAS,SAACC,EAAA,EAAD,CAAO7H,GAAI,CAC9B,gBAAiB,CACf6F,MAAO,cAGCO,MAAM,OAER,SAACuB,EAAA,EAAD,CACE/E,MAAM,KACNgF,SAAS,SAACC,EAAA,EAAD,CAAQ7H,GAAI,CAC/B,gBAAiB,CACf6F,MAAO,cAGCO,MAAM,OAER,SAACuB,EAAA,EAAD,CACE/E,MAAM,IACNgF,SAAS,SAACC,EAAA,EAAD,CAAQ7H,GAAI,CAC/B,gBAAiB,CACf6F,MAAO,cAGCO,MAAM,YAKXjB,MAED,SAACpE,EAAA,EAAD,CACEf,GAAI,CACF8H,OAAQ,SACR7H,gBAAiB,UACjB4G,MAAO,QACPjD,OAAQ,OACRmE,WAAY,gBACZjC,aAAc,OACdU,WAAY,UACZC,SAAU,OACVP,WAAY,MACZQ,WAAY,OACZC,cAAe,SACfC,UAAW,SACXf,MAAO,WAEToB,KAAK,SACLjG,QAAQ,YACRgH,UAAWhG,EAlBb,SAmBC,2BAOY,IAApBqB,IACK,kBAAMhD,UAAWoF,EAAcY,SAAUf,GAAzC,WACE,iBAAKjF,UAAWoF,EAAhB,WACE,SAACa,EAAA,EAAD,CACEtG,GAAI,CACFwG,WAAY,UACZC,SAAU,OACVP,WAAY,MACZQ,WAAY,OACZC,cAAe,SACfC,UAAW,OACXC,MAAO,QACPC,aAAc,QAEFC,gBAAiB,CAAEC,MAAO,CAAEnB,MAAO,YAEjDoB,KAAK,MACLb,MAAM,gBACNpF,QAAQ,WACR2E,SAAUxB,GACVvB,MAAOqB,GAASJ,WAChBW,KAAK,aACT6C,QAAS,kBAAM7D,EAAgB,aAAtB,EACT8D,OAAQ,kBAAM9D,EAAgB,KAAtB,KAEJ,SAAC8C,EAAA,EAAD,CACAtG,GAAI,CACFwG,WAAY,UACZC,SAAU,OACVP,WAAY,MACZQ,WAAY,OACZC,cAAe,SACfC,UAAW,OACXC,MAAO,QACPC,aAAc,QAEFC,gBAAiB,CAAEC,MAAO,CAAEnB,MAAO,YAEjDoB,KAAK,MACLb,MAAM,gBACNpF,QAAQ,WACR2E,SAAUxB,GACVvB,MAAOqB,GAASH,WAChBU,KAAK,aACT6C,QAAS,kBAAM7D,EAAgB,aAAtB,EACT8D,OAAQ,kBAAM9D,EAAgB,KAAtB,KAGN,SAAC8C,EAAA,EAAD,CACEtG,GAAI,CACFwG,WAAY,UACZC,SAAU,OACVP,WAAY,MACZQ,WAAY,OACZC,cAAe,SACfC,UAAW,OACXC,MAAO,QACPC,aAAc,QAEhBC,gBAAiB,CAAEC,MAAO,CAAEnB,MAAO,YACnCoB,KAAK,MACLC,WAAY,CAAEA,WAAY,CAAEC,IAAK,GAAIC,IAAK,KAC1ChB,MAAM,MACNpF,QAAQ,WACR2E,SAAUxB,GACVvB,MAAOqB,GAASlB,IAChByB,KAAK,MACL6C,QAAS,kBAAM7D,EAAgB,MAAtB,EACb8D,OAAQ,kBAAM9D,EAAgB,KAAtB,QAIR,iBAAKnD,UAAWoF,EAAhB,WACE,SAACa,EAAA,EAAD,CACEtG,GAAI,CACFwG,WAAY,UACZC,SAAU,OACVP,WAAY,MACZQ,WAAY,OACZC,cAAe,SACfC,UAAW,OACXC,MAAO,QACPC,aAAc,QAEFC,gBAAiB,CAAEC,MAAO,CAAEnB,MAAO,YAEjDoB,KAAK,MACLC,WAAY,CAAEA,WAAY,CAAEC,IAAK,GAAIC,IAAK,MAC1ChB,MAAM,qBACNpF,QAAQ,WACR2E,SAAUxB,GACVvB,MAAOqB,GAASF,iBAChBS,KAAK,mBACL6C,QAAS,kBAAM7D,EAAgB,mBAAtB,EACb8D,OAAQ,kBAAM9D,EAAgB,KAAtB,KAEJ,SAAC8C,EAAA,EAAD,CACAtG,GAAI,CACFwG,WAAY,UACZC,SAAU,OACVP,WAAY,MACZQ,WAAY,OACZC,cAAe,SACfC,UAAW,OACXC,MAAO,QACPC,aAAc,QAEFC,gBAAiB,CAAEC,MAAO,CAAEnB,MAAO,YAEjDoB,KAAK,MACLC,WAAY,CAAEA,WAAY,CAAEC,IAAK,GAAIC,IAAK,MAC1ChB,MAAM,qBACNpF,QAAQ,WACR2E,SAAUxB,GACVvB,MAAOqB,GAASD,iBAChBQ,KAAK,mBACL6C,QAAS,kBAAM7D,EAAgB,mBAAtB,EACb8D,OAAQ,kBAAM9D,EAAgB,KAAtB,KAEN,SAAC+D,EAAA,EAAD,CAAWC,GAAG,iCAAd,SAA+C,gBAI/C,UAACC,EAAA,EAAD,CACE,kBAAgB,sCAChB7E,MAAOqB,GAASf,UAChBsB,KAAK,YACLxE,GAAI,CACF0H,cAAe,OAEjB/B,SAAUxB,GACdkD,QAAS,kBAAM7D,EAAgB,YAAtB,EACT8D,OAAQ,kBAAM9D,EAAgB,KAAtB,EATN,WAWE,SAACmE,EAAA,EAAD,CACE/E,MAAM,IACNgF,SAAS,SAACC,EAAA,EAAD,CAAQ7H,GAAI,CAC/B,gBAAiB,CACf6F,MAAO,cAGCO,MAAM,OAER,SAACuB,EAAA,EAAD,CACE/E,MAAM,IACNgF,SAAS,SAACC,EAAA,EAAD,CAAO7H,GAAI,CAC9B,gBAAiB,CACf6F,MAAO,cAGCO,MAAM,OAER,SAACuB,EAAA,EAAD,CACE/E,MAAM,KACNgF,SAAS,SAACC,EAAA,EAAD,CAAQ7H,GAAI,CAC/B,gBAAiB,CACf6F,MAAO,cAGCO,MAAM,QAER,SAACuB,EAAA,EAAD,CACE/E,MAAM,IACNgF,SAAS,SAACC,EAAA,EAAD,CAAQ7H,GAAI,CAC/B,gBAAiB,CACf6F,MAAO,cAGCO,MAAM,YAKXjB,MAED,SAACpE,EAAA,EAAD,CACEf,GAAI,CACF8H,OAAQ,SACR7H,gBAAiB,UACjB4G,MAAO,QACPjD,OAAQ,OACRmE,WAAY,gBACZjC,aAAc,OACdU,WAAY,UACZC,SAAU,OACVP,WAAY,MACZQ,WAAY,OACZC,cAAe,SACfC,UAAW,SACXf,MAAO,WAEToB,KAAK,SACLjG,QAAQ,YACRgH,UAAWvF,EAlBb,SAmBC,mCAWT,SAAC,EAAD,CAAOnD,YAzfS,WAClBoE,IAAc,SAAAuE,GACZ,OAAO,kBACFA,GADL,IAEEzI,MAAM,GAET,IACD0I,YAAW,WAETxE,GAAc,CAAElE,MAAM,EAAOkB,cAAe,KAAMC,aAAc,IACjE,GAAE,IACJ,EA8eoCpB,WAAYA,OAGlD,C,8HCpkBD,GAAiB,E,SC4BjB,EAvBwB,SAAC,GAAiC,IAA/B8F,EAA8B,EAA9BA,eAAgBf,EAAc,EAAdA,QACzC,OACE,SAAC6D,EAAA,EAAD,CAAOC,UAAW,EAAG/H,UAAWoF,EAAAA,gBAAhC,UACE,SAAC4C,EAAA,EAAD,CAAMhI,UAAWoF,EAAAA,oBAAyBzF,GAAI,CAAE6G,MAAO,OAAQyB,SAAU,KAAzE,SACGhE,GAAWe,EACRA,EAAezE,KAAI,SAAC2H,EAAMC,GACxB,IACA,EAA6BD,EADdE,OAAOC,KAAKH,GAAM,IACzBf,EAAR,EAAQA,GAAImB,EAAZ,EAAYA,QAASC,EAArB,EAAqBA,IACfC,EAAgBD,EAAME,EAAAA,EAAyBC,EAAAA,EAC/CC,EAAYJ,EAAM,QAAU,MAClC,OACE,UAACK,EAAA,GAAD,CAAU5I,UAAWoF,EAAAA,oBAAkCyD,gBAAc,EAArE,WACE,SAACL,EAAD,CAAexI,UAAWoF,EAAAA,oBAAyBuB,MAAO,CAAEnB,MAAOmD,MACnE,SAACG,EAAA,EAAD,CAAcC,mBAAiB,EAACC,QAASV,EAAS3I,GAAI,CAAEyG,SAAU,YAFjBe,EAKtD,IACD,QAIX,C","sources":["webpack://final-team-project/./src/components/CaloriesCalc/CaloriesCalc.module.css?baa3","webpack://final-team-project/./src/components/Modal/modal.module.css?1a55","components/Modal/Modal.jsx","components/CaloriesCalc/CaloriesCalc.jsx","components/ValidationPopup/ValidationPopup.module.css","components/ValidationPopup/ValidationPopup.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"CaloriesCalc_section__WB2nl\",\"calcWrapper\":\"CaloriesCalc_calcWrapper__AcODC\",\"heading\":\"CaloriesCalc_heading__fAzfD\",\"formdiv\":\"CaloriesCalc_formdiv__+a6k+\",\"calcform\":\"CaloriesCalc_calcform__iDf5l\",\"positionWrapper\":\"CaloriesCalc_positionWrapper__+O-50\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalBox\":\"modal_modalBox__UnNX8\",\"closeButton\":\"modal_closeButton__hYa4+\",\"backButtonMobbile\":\"modal_backButtonMobbile__r5QHQ\",\"back\":\"modal_back__V8JNM\",\"modalTitle\":\"modal_modalTitle__3zeL5\",\"totalCaloriesNumber\":\"modal_totalCaloriesNumber__bUxLg\",\"totalCalories\":\"modal_totalCalories__U80Ut\",\"notEat\":\"modal_notEat__P-szP\",\"hr\":\"modal_hr__CzLPQ\",\"text2\":\"modal_text2__9c6ek\",\"notEatItem\":\"modal_notEatItem__hXM4C\",\"buttonWrapper\":\"modal_buttonWrapper__NZCpm\",\"button\":\"modal_button__GRC0s\"};","import {\n  Backdrop,\n  Box,\n  Button,\n  Fade,\n  Modal as MaterialModal,\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport s from './modal.module.css';\n\nconst Modal = props => {\n  const { handleClose, modalState } = props;\n  return (\n    <MaterialModal\n      open={modalState.open}\n      onClose={handleClose}\n      closeAfterTransition\n      slots={{ backdrop: Backdrop }}\n      slotProps={{\n        backdrop: {\n          timeout: 500,\n          sx: { backgroundColor: '#2121211f' },\n        },\n      }}\n    >\n      <Fade in={modalState.open}>\n        <Box>\n          <div className={s.backButtonMobbile}>\n            <span className={s.back} onClick={handleClose}>\n              ⏎\n            </span>\n          </div>\n          <div className={s.modalBox}>\n            <span className={s.closeButton} onClick={handleClose}>\n              ✕\n            </span>\n            <p className={s.modalTitle}>\n              Your recommended daily\n              <br /> calorie intake is\n            </p>\n            <b className={s.totalCalories}>\n              <span className={s.totalCaloriesNumber}>\n                {Math.round(modalState.totalCalories)}{' '}\n              </span>\n              kcal\n            </b>\n            <div className={s.notEat}>\n              <hr className={s.hr} />\n              <b className={s.text2}>Foods you should not eat</b>\n              <ol>\n                {modalState.foodNotToEat.map(listItem => (\n                  <li className={s.notEatItem} key={listItem}>\n                    {listItem}\n                  </li>\n                ))}\n              </ol>\n              <Link to=\"Login\" className={s.buttonWrapper}>\n                <Button className={s.button} variant=\"contained\">\n                  Start losing weight\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </Box>\n      </Fade>\n    </MaterialModal>\n  );\n};\nexport default Modal;\n","import React from 'react';\nimport css from './CaloriesCalc.module.css';\nimport { useState } from 'react';\nimport {useSelector, useDispatch } from 'react-redux';\nimport { Tab, Tabs } from \"@mui/material\";\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n// import FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Modal from 'components/Modal/Modal';\nimport ValidationPopup from '../ValidationPopup/ValidationPopup';\nimport { validateHeight, validateAge, validateCurrent, validateDesired, validateBlood }\n  from '../../redux/validation/calculateCalsSlice'\nimport { validateHeightFeet, validateHeightInch, validateCurrentLbs, validateDesiredLbs }\nfrom '../../redux/validation/calculateCalsSlice'\nimport  { storeCalulator } from '../../redux/Calc/calcSlice'\n\nconst CaloriesCalc = () => {\n  const dispatch = useDispatch();\n  const validHeight = useSelector(state => state.calculate.isHeightValid)\n  const validAge = useSelector(state => state.calculate.isAgeValid)\n  const validcurrent = useSelector(state => state.calculate.isCurrentValid)\n  const validDesired = useSelector(state => state.calculate.isDesiredValid)\n  const validBlood = useSelector(state => state.calculate.isBloodValid)\n  const isFormValid = validHeight && validAge && validcurrent && validDesired && validBlood ? true : false \n\n  const validHeightFeet = useSelector(state => state.calculate.isHeightFeetValid)\n  const validHeightInch = useSelector(state => state.calculate.isHeightInchValid)\n  const validcurrentLbs = useSelector(state => state.calculate.isCurrentLbsValid)\n  const validDesiredLbs = useSelector(state => state.calculate.isDesiredLbsValid)\n  const isStandardFormValid = validHeightFeet && validHeightInch && validAge && validcurrentLbs && validDesiredLbs && validBlood ? true : false \n\n  const returnedCal = useSelector((state) => state.calCalories.value);\n  \n  const [validationPopups, setValidationPopups] = useState({\n    weight: false,\n    age: false,\n    currentWeight: false,\n    desiredWeight: false,\n    bloodType: false\n  });\n\n  const [currentTabIndex, setCurrentTabIndex] = useState(0);\n \n  const handleTabChange = (e, tabIndex) => {\n    setCurrentTabIndex(tabIndex);\n  };\n  const [focusedField, setFocusedField] = useState(null);\n\n  const toggleValidationPopup = (fieldName, visible) => {\n    setValidationPopups({ ...validationPopups, [fieldName]: visible });\n   \n  };\n\n    const validationReqs = useSelector((state) => state.calculate.validationReqs);\n\n\n  const [modalState, setModalState] = useState({\n    open: false,\n    totalCalories: null,\n    foodNotToEat: [],\n  }); //modal state and setters\n\n  const handleOpen = totalCalories => {\n    setModalState({\n      open: true,\n      totalCalories: totalCalories,\n      foodNotToEat: ['give', 'me', 'food'], //  change me\n    });\n  };\n  const handleClose = () => {\n    setModalState(prev => {\n      return {\n        ...prev,\n        open: false,\n      };\n    });\n    setTimeout(() => {\n      // fixing effect, when during closing modal you see 0 kcal recommended daily calorie intake\n      setModalState({ open: false, totalCalories: null, foodNotToEat: [] });\n    }, 250);\n  };\n\n  const [formData, setFormData] = useState({\n     height: returnedCal.height,\n    age: returnedCal.age,\n    currentWeight: returnedCal.currentWeight,\n    desiredWeight: returnedCal.desiredWeight,\n    bloodType: returnedCal.bloodType,\n    heightFeet: returnedCal.heightFeet,\n    heightInch: returnedCal.heightInch,\n    currentWeightLbs: returnedCal.currentWeightLbs,\n    desiredWeightLbs: returnedCal.desiredWeightLbs,\n  });\n\n  const changeHandler = e => {\nconst { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    })\n  switch (name) {\n    case 'height':\n        dispatch(validateHeight({ fieldValue: value }));\n          break;\n      case 'heightFeet':\n        dispatch(validateHeightFeet({ fieldValue: value }));\n      break;\n      case 'heightInch':\n        dispatch(validateHeightInch({ fieldValue: value }));\n          break;\n    case 'age':\n      dispatch(validateAge({ fieldValue: value }));\n        break;\n    case 'currentWeight':\n      dispatch(validateCurrent({ fieldValue: value }));\n      break;\n    case 'currentWeightLbs':\n      dispatch(validateCurrentLbs({ fieldValue: value }));\n        break;\n    case 'desiredWeight':\n      dispatch(validateDesired({ fieldValue: value }));\n      break;\n     case 'desiredWeightLbs':\n      dispatch(validateDesiredLbs({ fieldValue: value }));\n      break;\n    case 'bloodType':\n      dispatch(validateBlood({ fieldValue: value }));\n      break;\n    default:\n        break;\n    }\n    if (currentTabIndex === 1) {\n      const {heightFeet, heightInch, currentWeightLbs, desiredWeightLbs} = formData\n        setFormData(formData => {\n      return {...formData, height: ((heightFeet *12 + heightInch*1) * 2.54), currentWeight: currentWeightLbs * .454, desiredWeight: desiredWeightLbs*.454 }\n        })\n  }   \n    setFocusedField(name);\n    toggleValidationPopup(name, true);\n  };\n\n  const renderValidationPopup = () => {\n    return (\n      <ValidationPopup\n        validationData={validationReqs[focusedField]}\n        visible={!!focusedField}\n      />\n    );\n  };\n\n  const submitHandler = async e => {\n    e.preventDefault();\n    if (currentTabIndex === 1) {\n    const {heightFeet, heightInch, currentWeightLbs, desiredWeightLbs} = formData\n     await setFormData(formData => {\n    return {...formData, height: ((heightFeet *12 + heightInch*1) * 2.54), currentWeight: currentWeightLbs * .454, desiredWeight: desiredWeightLbs*.454 }\n      })\n}   \n    \n    const {height, age, currentWeight, desiredWeight, bloodType} = formData\n    const totalCalories =\n      10 * currentWeight +\n      6.25 * height -\n      5 * age -\n      161 -\n      10 * (currentWeight - desiredWeight);\n    \ndispatch(storeCalulator({height: height, age: age, currentWeight: currentWeight, desiredWeight: desiredWeight, bloodType: bloodType }) )\n\n    handleOpen(totalCalories); // give me food\n  };\n\n  return (\n    <>\n      <div className={css.positionWrapper}>\n        <div className={css.section}>\n          <div className={css.calcWrapper}>\n            <h1 className={css.heading}>Calculate your daily calorie</h1>\n            <h1 className={css.heading}>intake right now</h1>\n            \n            <Tabs value={currentTabIndex} onChange={handleTabChange} sx = {{\"& button\": {color: \"white\",borderRadius: 2, backgroundColor: \"#FC842D\", marginTop: \"15px\", marginRight: \"10px\"},\n               \"& button:focus\": {color: \"white\", textShadow: \"2px 2px\", fontWeight: 900}}}>\n        <Tab label='Metric' />\n        <Tab label='Standard US' />\n      </Tabs>\n      \n{/* TAB 1 Contents */}\n      {currentTabIndex === 0 && (\n            <form className={css.calcform} onSubmit={submitHandler}>\n              <div className={css.formdiv}>\n                <TextField\n                  sx={{ \"& .MuiOutlinedInput-root.Mui-focused\": {\n      \"& > fieldset\": {\nborderColor: \"orange\"\n      }\n    },\n                    fontFamily: 'Verdana',\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    lineHeight: '17px',\n                    letterSpacing: '0.04em',\n                    textAlign: 'left',\n                     width: '272px',\n                     paddingRight: '32px',\n                  }}\n                                InputLabelProps={{ style: { color: \"#9B9FAA\" } }}\n\n                  type=\"tel\"\n                  inputprops={{ inputprops: { min: 122, max: 214 } }}\n                  label=\"Height *\"\n                    variant=\"standard\"\n                  onChange={changeHandler}\n                  value={formData.height}\n                  name=\"height\"\n              onFocus={() => setFocusedField('height')}\n              onBlur={() => setFocusedField(null)}\n                />\n                <TextField\n                  sx={{\n                    fontFamily: 'Verdana',\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    lineHeight: '17px',\n                    letterSpacing: '0.04em',\n                    textAlign: 'left',\n                    width: '240px',\n                    paddingRight: '32px',\n                  }}\n                  InputLabelProps={{ style: { color: \"#9B9FAA\" } }}\n                  type=\"tel\"\n                  inputprops={{ inputprops: { min: 18, max: 80 } }}\n                  label=\"Age\"\n                  variant=\"standard\"\n                  onChange={changeHandler}\n                  value={formData.age}\n                  name=\"age\"\n                  onFocus={() => setFocusedField('age')}\n              onBlur={() => setFocusedField(null)}\n                />\n                <TextField\n                  sx={{\n                    fontFamily: 'Verdana',\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    lineHeight: '17px',\n                    letterSpacing: '0.04em',\n                    textAlign: 'left',\n                    width: '240px',\n                    paddingRight: '32px',\n                  }}\n                                InputLabelProps={{ style: { color: \"#9B9FAA\" } }}\n\n                  type=\"tel\"\n                  inputprops={{ inputprops: { min: 34, max: 181 } }}\n                  label=\"Current Weight\"\n                  variant=\"standard\"\n                  onChange={changeHandler}\n                  value={formData.currentWeight}\n                  name=\"currentWeight\"\n                  onFocus={() => setFocusedField('currentWeight')}\n              onBlur={() => setFocusedField(null)}\n                />\n              </div>\n              <div className={css.formdiv}>\n                <TextField\n                  sx={{\n                    fontFamily: 'Verdana',\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    lineHeight: '17px',\n                    letterSpacing: '0.04em',\n                    textAlign: 'left',\n                    width: '240px',\n                    paddingRight: '32px',\n                  }}\n                                InputLabelProps={{ style: { color: \"#9B9FAA\" } }}\n\n                  type=\"tel\"\n                  inputprops={{ inputprops: { min: 34, max: 181 } }}\n                  label=\"Desired Weight\"\n                  variant=\"standard\"\n                  onChange={changeHandler}\n                  value={formData.desiredWeight}\n                  name=\"desiredWeight\"\n                  onFocus={() => setFocusedField('desiredWeight')}\n              onBlur={() => setFocusedField(null)}\n                />\n                <FormLabel id=\"demo-radio-buttons-group-label\">\n                  Blood Type\n                </FormLabel>\n\n                <RadioGroup\n                  aria-labelledby=\"demo-controlled-radio-buttons-group\"\n                  value={formData.bloodType}\n                  name=\"bloodType\"\n                  sx={{\n                    flexDirection: 'row',\n                  }}\n                  onChange={changeHandler}\n              onFocus={() => setFocusedField('bloodType')}\n              onBlur={() => setFocusedField(null)}\n                >\n                  <FormControlLabel\n                    value=\"A\"\n                    control={<Radio  sx={{\n          '&.Mui-checked': {\n            color: '#FC842D',\n          },\n        }} />}\n                    label=\"1\"\n                  />\n                  <FormControlLabel\n                    value=\"B\"\n                    control={<Radio sx={{\n          '&.Mui-checked': {\n            color: '#FC842D',\n          },\n        }} />}\n                    label=\"2\"\n                  />\n                  <FormControlLabel\n                    value=\"AB\"\n                    control={<Radio  sx={{\n          '&.Mui-checked': {\n            color: '#FC842D',\n          },\n        }}/>}\n                    label=\"3\"\n                  />\n                  <FormControlLabel\n                    value=\"O\"\n                    control={<Radio  sx={{\n          '&.Mui-checked': {\n            color: '#FC842D',\n          },\n        }}/>}\n                    label=\"4\"\n                  />\n                </RadioGroup>\n              </div>\n\n              {renderValidationPopup()}\n\n              <Button\n                sx={{\n                  margin: '40px 0',\n                  backgroundColor: '#FC842D',\n                  width: '210px',\n                  height: '43px',\n                  dropShadow: '50% #FC842D80',\n                  borderRadius: '30px',\n                  fontFamily: 'Verdana',\n                  fontSize: '14px',\n                  fontWeight: '700',\n                  lineHeight: '17px',\n                  letterSpacing: '0.04em',\n                  textAlign: 'center',\n                  color: '#FFFFFF',\n                }}\n                type=\"submit\"\n                variant=\"contained\"\n                disabled={!isFormValid}\n              >\n                Start losing weight\n                </Button>\n                \n              </form>\n            )}\n{/*  Standard US Contents */}\n      {currentTabIndex === 1 && (\n            <form className={css.calcform} onSubmit={submitHandler}>\n              <div className={css.formdiv}>\n                <TextField\n                  sx={{\n                    fontFamily: 'Verdana',\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    lineHeight: '17px',\n                    letterSpacing: '0.04em',\n                    textAlign: 'left',\n                    width: '240px',\n                    paddingRight: '32px',\n                  }}\n                                InputLabelProps={{ style: { color: \"#9B9FAA\" } }}\n\n                  type=\"tel\"\n                  label=\"Height Feet *\"\n                  variant=\"standard\"\n                  onChange={changeHandler}\n                  value={formData.heightFeet}\n                  name=\"heightFeet\"\n              onFocus={() => setFocusedField('heightFeet')}\n              onBlur={() => setFocusedField(null)}\n                  />\n                  <TextField\n                  sx={{\n                    fontFamily: 'Verdana',\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    lineHeight: '17px',\n                    letterSpacing: '0.04em',\n                    textAlign: 'left',\n                    width: '240px',\n                    paddingRight: '32px',\n                  }}\n                                InputLabelProps={{ style: { color: \"#9B9FAA\" } }}\n\n                  type=\"tel\"\n                  label=\"Height Inch *\"\n                  variant=\"standard\"\n                  onChange={changeHandler}\n                  value={formData.heightInch}\n                  name=\"heightInch\"\n              onFocus={() => setFocusedField('heightInch')}\n              onBlur={() => setFocusedField(null)}\n                  />\n                \n                <TextField\n                  sx={{\n                    fontFamily: 'Verdana',\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    lineHeight: '17px',\n                    letterSpacing: '0.04em',\n                    textAlign: 'left',\n                    width: '240px',\n                    paddingRight: '32px',\n                  }}\n                  InputLabelProps={{ style: { color: \"#9B9FAA\" } }}\n                  type=\"tel\"\n                  inputprops={{ inputprops: { min: 18, max: 80 } }}\n                  label=\"Age\"\n                  variant=\"standard\"\n                  onChange={changeHandler}\n                  value={formData.age}\n                  name=\"age\"\n                  onFocus={() => setFocusedField('age')}\n              onBlur={() => setFocusedField(null)}\n                />\n                \n              </div>\n              <div className={css.formdiv}>\n                <TextField\n                  sx={{\n                    fontFamily: 'Verdana',\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    lineHeight: '17px',\n                    letterSpacing: '0.04em',\n                    textAlign: 'left',\n                    width: '240px',\n                    paddingRight: '32px',\n                  }}\n                                InputLabelProps={{ style: { color: \"#9B9FAA\" } }}\n\n                  type=\"tel\"\n                  inputprops={{ inputprops: { min: 34, max: 181 } }}\n                  label=\"Current Weight Lbs\"\n                  variant=\"standard\"\n                  onChange={changeHandler}\n                  value={formData.currentWeightLbs}\n                  name=\"currentWeightLbs\"\n                  onFocus={() => setFocusedField('currentWeightLbs')}\n              onBlur={() => setFocusedField(null)}\n                />\n                  <TextField\n                  sx={{\n                    fontFamily: 'Verdana',\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    lineHeight: '17px',\n                    letterSpacing: '0.04em',\n                    textAlign: 'left',\n                    width: '240px',\n                    paddingRight: '32px',\n                  }}\n                                InputLabelProps={{ style: { color: \"#9B9FAA\" } }}\n\n                  type=\"tel\"\n                  inputprops={{ inputprops: { min: 34, max: 181 } }}\n                  label=\"Desired Weight Lbs\"\n                  variant=\"standard\"\n                  onChange={changeHandler}\n                  value={formData.desiredWeightLbs}\n                  name=\"desiredWeightLbs\"\n                  onFocus={() => setFocusedField('desiredWeightLbs')}\n              onBlur={() => setFocusedField(null)}\n                />\n                <FormLabel id=\"demo-radio-buttons-group-label\">\n                  Blood Type\n                </FormLabel>\n\n                <RadioGroup\n                  aria-labelledby=\"demo-controlled-radio-buttons-group\"\n                  value={formData.bloodType}\n                  name=\"bloodType\"\n                  sx={{\n                    flexDirection: 'row',\n                  }}\n                  onChange={changeHandler}\n              onFocus={() => setFocusedField('bloodType')}\n              onBlur={() => setFocusedField(null)}\n                >\n                  <FormControlLabel\n                    value=\"A\"\n                    control={<Radio  sx={{\n          '&.Mui-checked': {\n            color: '#FC842D',\n          },\n        }} />}\n                    label=\"A\"\n                  />\n                  <FormControlLabel\n                    value=\"B\"\n                    control={<Radio sx={{\n          '&.Mui-checked': {\n            color: '#FC842D',\n          },\n        }} />}\n                    label=\"B\"\n                  />\n                  <FormControlLabel\n                    value=\"AB\"\n                    control={<Radio  sx={{\n          '&.Mui-checked': {\n            color: '#FC842D',\n          },\n        }}/>}\n                    label=\"AB\"\n                  />\n                  <FormControlLabel\n                    value=\"O\"\n                    control={<Radio  sx={{\n          '&.Mui-checked': {\n            color: '#FC842D',\n          },\n        }}/>}\n                    label=\"O\"\n                  />\n                </RadioGroup>\n              </div>\n\n              {renderValidationPopup()}\n\n              <Button\n                sx={{\n                  margin: '40px 0',\n                  backgroundColor: '#FC842D',\n                  width: '210px',\n                  height: '43px',\n                  dropShadow: '50% #FC842D80',\n                  borderRadius: '30px',\n                  fontFamily: 'Verdana',\n                  fontSize: '14px',\n                  fontWeight: '700',\n                  lineHeight: '17px',\n                  letterSpacing: '0.04em',\n                  textAlign: 'center',\n                  color: '#FFFFFF',\n                }}\n                type=\"submit\"\n                variant=\"contained\"\n                disabled={!isStandardFormValid}\n              >\n                Start losing weight\n                </Button>\n                \n              </form>\n              )}            \n\n          </div>\n        </div>\n      </div>\n\n      <Modal handleClose={handleClose} modalState={modalState} />\n    </>\n  );\n};\n\nexport default CaloriesCalc;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport { Paper, List, ListItem, ListItemText } from '@mui/material';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport css from './ValidationPopup.module.css';\n\nconst ValidationPopup = ({ validationData, visible }) => {\n  return (\n    <Paper elevation={8} className={css.validationPopup}>\n      <List className={css.validationPopupList} sx={{ width: '100%', maxWidth: 360 }}>\n        {visible && validationData\n          ? validationData.map((item, index) => {\n              const reqKey = Object.keys(item)[0];\n              const { id, message, met } = item[reqKey];\n              const IconComponent = met ? CheckCircleOutlineIcon : ErrorOutlineIcon;\n              const iconColor = met ? 'green' : 'red';\n              return (\n                <ListItem className={css.validationPopupItem} key={id} disableGutters>\n                  <IconComponent className={css.validationPopupIcon} style={{ color: iconColor }} />\n                  <ListItemText disableTypography primary={message} sx={{ fontSize: '12px' }} />\n                </ListItem>\n              );\n            })\n          : null}\n      </List>\n    </Paper>\n  );\n};\n\nexport default ValidationPopup;"],"names":["props","handleClose","modalState","open","onClose","closeAfterTransition","slots","backdrop","Backdrop","slotProps","timeout","sx","backgroundColor","Fade","in","Box","className","s","onClick","Math","round","totalCalories","foodNotToEat","map","listItem","to","Button","variant","dispatch","useDispatch","validHeight","useSelector","state","calculate","isHeightValid","validAge","isAgeValid","validcurrent","isCurrentValid","validDesired","isDesiredValid","validBlood","isBloodValid","isFormValid","validHeightFeet","isHeightFeetValid","validHeightInch","isHeightInchValid","validcurrentLbs","isCurrentLbsValid","validDesiredLbs","isDesiredLbsValid","isStandardFormValid","returnedCal","calCalories","value","useState","weight","age","currentWeight","desiredWeight","bloodType","validationPopups","setValidationPopups","currentTabIndex","setCurrentTabIndex","focusedField","setFocusedField","validationReqs","setModalState","handleOpen","height","heightFeet","heightInch","currentWeightLbs","desiredWeightLbs","formData","setFormData","changeHandler","e","fieldName","visible","target","name","validateHeight","fieldValue","validateHeightFeet","validateHeightInch","validateAge","validateCurrent","validateCurrentLbs","validateDesired","validateDesiredLbs","validateBlood","renderValidationPopup","ValidationPopup","validationData","submitHandler","preventDefault","storeCalulator","css","Tabs","onChange","tabIndex","color","borderRadius","marginTop","marginRight","textShadow","fontWeight","Tab","label","onSubmit","TextField","borderColor","fontFamily","fontSize","lineHeight","letterSpacing","textAlign","width","paddingRight","InputLabelProps","style","type","inputprops","min","max","onFocus","onBlur","FormLabel","id","RadioGroup","flexDirection","FormControlLabel","control","Radio","margin","dropShadow","disabled","prev","setTimeout","Paper","elevation","List","maxWidth","item","index","Object","keys","message","met","IconComponent","CheckCircleOutlineIcon","ErrorOutlineIcon","iconColor","ListItem","disableGutters","ListItemText","disableTypography","primary"],"sourceRoot":""}