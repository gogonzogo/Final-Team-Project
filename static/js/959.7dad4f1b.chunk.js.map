{"version":3,"file":"static/js/959.7dad4f1b.chunk.js","mappings":"0OACA,EAAyB,uB,SCCV,SAASA,IACpB,OACI,mBAAQC,UAAWC,EAAYC,KAAK,SAApC,SAA8C,OAErD,CCLD,MAA6B,+BCCd,SAASC,IACpB,OACI,mBAAQH,UAAWC,EAAgBC,KAAK,SAAxC,SAAkD,OAEzD,CCLD,MAA0B,qCAA1B,EAAyE,qCAAzE,EAA0H,uC,kwteCY3G,SAASE,IACpB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAwBN,EAAAA,EAAAA,UAAS,IAAjC,eAAOO,EAAP,KAAaC,EAAb,KAEOC,GAAWC,EAAAA,EAAAA,OAElBC,EAAAA,EAAAA,YAAU,WACVH,EAAQI,EACT,GAAE,KAEID,EAAAA,EAAAA,YAAU,WACP,IAAME,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aAAe,MACrEf,EAAeW,EAAeZ,aAAe,IAC7CG,EAASS,EAAeV,OAAS,IACjCG,EAAYO,EAAeR,UAAY,GACvC,GAAE,KAEPM,EAAAA,EAAAA,YAAU,WACNK,aAAaE,QAAQ,WAAYJ,KAAKK,UAAU,CAAElB,YAAAA,EAAaE,MAAAA,EAAOE,SAAAA,IACrE,GAAE,CAACJ,EAAaE,EAAOE,IAMhC,IAMMe,EAAe,SAAAC,GACjBA,EAAMC,iBAGN,IAAMC,EAAWX,EAAAA,MAAc,SAACY,GAAD,OAAUA,EAAKC,QAAUxB,CAAzB,IAGnC,GAAIsB,EAAU,CAEZ,IAAMG,EAAsBH,EAASlB,SAAW,IAAOF,EACrDG,EAAYoB,EACX,MAIHpB,EAAY,GAGVG,GAASkB,EAAAA,EAAAA,IAAQ,CAAE1B,YAAAA,EAAaE,MAAAA,EAAOE,SAAAA,KAAYuB,MAAK,WACpDnB,GAASoB,EAAAA,EAAAA,MAEZ,IAEL3B,EAAe,IACXE,EAAS,GAGZ,EAEK0B,EAAcC,MAAMC,KAAK,IAAIC,IAAI1B,EAAK2B,KAAI,SAACV,GAAD,OAAUA,EAAKC,KAAf,MAChD,GAA0BzB,EAAAA,EAAAA,UAAS,eAAnC,eAAOmC,EAAP,KAAcC,EAAd,KAEA,OAEI,gBAAKzC,UAAWC,EAAhB,UAEI,kBAAMD,UAAWC,EAAeyC,SAAUjB,EAA1C,WACI,gBAAKzB,UAAWC,EAAhB,UACI,SAAC0C,EAAA,EAAD,CAAOC,QAAS,EAAGC,GAAI,CAAEC,MAAO,KAAhC,UACZ,SAACC,EAAA,EAAD,CACIC,GAAG,sBACHC,UAAQ,EACRC,KAAK,QACLC,QAAShB,EACTK,MAAOA,EACSY,SAAU,SAAC1B,EAAO2B,GAAeZ,EAASY,EAAY,EACtEC,WAAYhD,EACIiD,cAAe,SAAC7B,EAAO8B,GAAoBjD,EAAeiD,EAAiB,EAE7FX,GAAI,CAAEC,MAAO,KACXW,YAAa,SAACC,GAAD,OAAY,SAACC,EAAA,GAAD,gBAAWd,GAAI,CAC7CC,MAAO,QACPc,aAAc,SAEPF,GAJuB,IAKzBG,QAAQ,WACRC,MAAM,sBACNC,YAAY,KAPC,SAcT,gBAAK/D,UAAWC,EAAhB,UAGI,SAAC0D,EAAA,EAAD,CAAWd,GAAI,CAACmB,WAAY,UACzCC,SAAU,OACVC,WAAY,MACZC,WAAY,OACZC,cAAe,SACfC,UAAW,OACXvB,MAAO,QACPc,aAAc,QAGGZ,GAAG,iBACPc,MAAM,QACFD,QAAQ,WACP3D,KAAK,SACpBoE,gBAAiB,CACfC,QAAQ,GAEJ/B,MAAOhC,EACC4C,SA3FM,SAAA1B,GACtBjB,EAASiB,EAAM8C,OAAOhC,MACzB,OA8FW,SAACzC,EAAD,CAAS0E,QAAShD,KAClB,SAACtB,EAAD,QAMf,CC9ID,MAA2B,gCCgB3B,MAfA,WACI,OAAwBE,EAAAA,EAAAA,YAAxB,eAAOqE,EAAP,KAAaC,EAAb,KAGA,OADAC,QAAQC,IAAI,OAAQH,IAEd,iBAAK1E,UAAWC,EAAhB,WACE,wBAAKyE,GAAQ,IAAII,KAAKJ,GAAMK,mBAAmB,QAAS,CAC5DC,MAAO,UACPC,IAAK,UACLC,KAAM,eAEF,kBAAOC,MAAO,CAACC,WAAY,QAAUlF,KAAK,OAAOkD,SAAU,SAAAiC,GAAC,OAAEV,EAAQU,EAAEb,OAAOhC,MAAnB,MAGvE,ECCD,MAVA,WACE,OACE,iBAAKxC,UAAU,kCAAf,WACE,SAAC,EAAD,KACA,SAACI,EAAD,MAIL,C","sources":["webpack://final-team-project/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://final-team-project/./src/components/Button/CirclePlus.module.css?b94b","components/Button/CirclePlus.jsx","webpack://final-team-project/./src/components/DiaryAddProductForm/DiaryAddProductForm.module.css?6b10","components/DiaryAddProductForm/DiaryAddProductForm.jsx","webpack://final-team-project/./src/components/DiaryCalendar/DiaryCalendar.module.css?3cac","components/DiaryCalendar/DiaryCalendar.jsx","pages/Diary/Diary.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__Smq3v\"};","import css from './Button.module.css';\n\nexport default function Button() {\n    return (\n        <button className={css.Button} type=\"submit\" >Add</button>\n    );\n}","// extracted by mini-css-extract-plugin\nexport default {\"CirclePlus\":\"CirclePlus_CirclePlus__ErKzq\"};","import css from './CirclePlus.module.css';\n\nexport default function CirclePlus() {\n    return (\n        <button className={css.CirclePlus} type=\"submit\" > + </button>\n    );\n}","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"DiaryAddProductForm_section__OMkqD\",\"formdiv\":\"DiaryAddProductForm_formdiv__wXEO1\",\"diaryform\":\"DiaryAddProductForm_diaryform__I65-r\",\"Button\":\"DiaryAddProductForm_Button__FWynw\",\"heading\":\"DiaryAddProductForm_heading__l7SXo\"};","import React, { useState, useEffect } from 'react';\nimport {Autocomplete, TextField, Stack} from '@mui/material';\nimport Button from '../Button/Button';\nimport CirclePlus from '../Button/CirclePlus';\nimport css from './DiaryAddProductForm.module.css';\nimport { useDispatch } from 'react-redux';\nimport { fetchFoods, addFood } from 'redux/productStore/productStoreOperations';\n\nimport jsonData from '../ProductsList/data/products.json';\n\n\n\n\nexport default function DiaryAddProduct() {\n    const [productName, setProductName] = useState('');\n    const [grams, setGrams] = useState('');\n    const [calories, setCalories] = useState('');\n    const [data, setData] = useState([]);\n\n     const dispatch = useDispatch();\n    \n    useEffect(() => {\n    setData(jsonData);\n  }, []);\n  \n         useEffect(() => {\n            const storedProducts = JSON.parse(localStorage.getItem('products') || '[]');\n             setProductName(storedProducts.productName || '');\n             setGrams(storedProducts.grams || '');\n             setCalories(storedProducts.calories || '');\n            }, []);\n\n        useEffect(() => {\n            localStorage.setItem('products', JSON.stringify({ productName, grams, calories }));\n            }, [productName, grams, calories]);\n\n\n    \n    \n\n    const handleGramsChange = event => {\n        setGrams(event.target.value);\n    };\n\n    \n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        \n        const foodItem = jsonData.find((item) => item.title === productName);\n        \n\n    if (foodItem) {\n      \n      const calculatedCalories = (foodItem.calories / 100) * grams;\n        setCalories(calculatedCalories);\n        }\n        \n    else {\n      \n      setCalories(0);\n    }\n\n        dispatch(addFood({ productName, grams, calories})).then(() => {\n            dispatch(fetchFoods());\n            \n        });\n      \n    setProductName('');\n        setGrams('');    \n\n       \n    };\n\n    const uniqueTitle = Array.from(new Set(data.map((item) => item.title)));\n    const [value, setValue] = useState('uniqueTitle');\n    \n    return (\n        \n        <div className={css.section}>\n          \n            <form className={css.diaryform} onSubmit={handleSubmit} >\n                <div className={css.formdiv}>\n                    <Stack spacing={2} sx={{ width: 300 }}>\n        <Autocomplete\n            id=\"size-small-standard\"\n            freeSolo\n            size='small'\n            options={uniqueTitle}\n            value={value}\n                            onChange={(event, newValue) => { setValue(newValue); }}\n            inputValue={productName} \n                            onInputChange={(event, newInputValue) => { setProductName(newInputValue); }}                \n\n          sx={{ width: 300 }}\n            renderInput={(params) => <TextField sx={{\n       width: \"240px\",\n       paddingRight: \"32px\",\n\n       }} {...params}\n            variant=\"standard\"\n            label=\"Enter product name*\"\n            placeholder=\"\" />}\n        />\n        \n        </Stack>\n        \n                    \n                </div>\n                <div className={css.formdiv}>\n                    \n                    \n                    <TextField sx={{fontFamily: \"Verdana\",\n       fontSize: '14px',\n       fontWeight: \"700\",\n       lineHeight: \"17px\",\n       letterSpacing: \"0.04em\",\n       textAlign: \"left\",\n       width: \"240px\",\n       paddingRight: \"32px\",\n\n       }}\n                        id=\"standard-basic\"\n                    label=\"Grams\"\n                        variant=\"standard\"\n                         type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n                        }}\n                value={grams}\n                        onChange={handleGramsChange}/>\n                 \n                    \n                   \n             </div>\n                <Button  onClick={handleSubmit} />\n                <CirclePlus />\n                \n            </form>\n         \n        </div>\n    );\n}","// extracted by mini-css-extract-plugin\nexport default {\"calendar\":\"DiaryCalendar_calendar__nJScT\"};","import React, { useState } from \"react\";\nimport css from './DiaryCalendar.module.css';\nfunction DiaryCalendar() {\n    const [date, setDate] = useState();\n\n    console.log(\"Date\", date);\n    return (\n          <div className={css.calendar}>\n            <h3>{date && new Date(date).toLocaleDateString(\"en-US\", {\n        month: \"numeric\",\n        day: \"numeric\",\n        year: \"numeric\",\n      })}</h3>\n            <input style={{marginLeft: \"20px\" }} type=\"date\" onChange={e=>setDate(e.target.value)} />\n        </div>\n    );\n}\nexport default DiaryCalendar;","import React from 'react';\nimport DiaryAddProductForm from 'components/DiaryAddProductForm/DiaryAddProductForm';\nimport DiaryCalendar from 'components/DiaryCalendar/DiaryCalendar';\n\n\n\n\nfunction Diary() {\n  return (\n    <div className=\"background Calc-DairyBackground\">\n      <DiaryCalendar />\n      <DiaryAddProductForm />\n      \n    </div>\n  )\n}\n\nexport default Diary"],"names":["Button","className","css","type","CirclePlus","DiaryAddProduct","useState","productName","setProductName","grams","setGrams","calories","setCalories","data","setData","dispatch","useDispatch","useEffect","jsonData","storedProducts","JSON","parse","localStorage","getItem","setItem","stringify","handleSubmit","event","preventDefault","foodItem","item","title","calculatedCalories","addFood","then","fetchFoods","uniqueTitle","Array","from","Set","map","value","setValue","onSubmit","Stack","spacing","sx","width","Autocomplete","id","freeSolo","size","options","onChange","newValue","inputValue","onInputChange","newInputValue","renderInput","params","TextField","paddingRight","variant","label","placeholder","fontFamily","fontSize","fontWeight","lineHeight","letterSpacing","textAlign","InputLabelProps","shrink","target","onClick","date","setDate","console","log","Date","toLocaleDateString","month","day","year","style","marginLeft","e"],"sourceRoot":""}