{"version":3,"file":"static/js/180.73157039.chunk.js","mappings":"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","sources":["components/Modal/GraphModal.jsx","components/RightSideBar/RightSideBar.jsx","components/RightSideBar/Stats.jsx","components/RightSideBar/StatsContainer.jsx","pages/Calculator/Calculator.jsx","webpack://final-team-project/./src/components/RightSideBar/rightSideBar.module.css?edd3"],"sourcesContent":["\nimport React from 'react';\nimport { forwardRef, } from 'react';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport Slide from '@mui/material/Slide';\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport { LineChart } from '@mui/x-charts/LineChart';\n\n\nconst Transition = forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\n\nconst GraphModal = props => {\n\n    const { handleModalClose, modalState } = props;\n\n    const graphCalcDates = modalState.data.payload.graphCalcDates\n    const grapCalcData = modalState.data.payload.graphCalcData\n    const grapDairyhData = modalState.data.payload.grapDairyhData\n    const graphDiaryDates = modalState.data.payload.graphDiaryDates\n\n\n\n    return (\n\n        <>\n\n            <Dialog\n\n                PaperProps={{\n                    sx: {\n                        minWidth: \"80%\",\n                        maxWidth: \"80%\",\n                        maxHeight: \"80%\",\n                        minHeight: \"80%\"\n                    }\n                }}\n                open={modalState.open}\n                TransitionComponent={Transition}\n                keepMounted\n                onClose={handleModalClose}\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n\n                <DialogContent>\n\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        <div style={{ height: \"100%\", width: '100%' }}>\n\n                            <BarChart\n                                xAxis={[\n                                    {\n                                        id: 'barCategories',\n                                        data: graphDiaryDates, label: 'Calories eaten',\n                                        scaleType: 'band',\n                                    },\n                                ]}\n                                series={[\n                                    {\n                                        data: grapDairyhData\n                                    },\n                                ]}\n                                width={500}\n                                height={300}\n                            />\n                            <LineChart\n\n                                series={[\n                                    {\n                                        data: grapCalcData, label: 'Change in weight', color: 'orange'\n                                    },\n\n\n                                ]}\n                                xAxis={[{ scaleType: 'point', data: graphCalcDates }]}\n                                width={500}\n                                height={300}\n                            />\n                        </div>\n\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleModalClose}>close</Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nexport default GraphModal;\n","import { useUser } from 'hooks/useUser';\nimport s from './rightSideBar.module.css';\nimport React from 'react';\n\nconst RightSideBar = props => {\n  const { calculator } = useUser();\n  return (\n    <div className={s.sideBarContainer}>\n      {React.cloneElement(props.children, { calculator: calculator })}\n    </div>\n  );\n};\n\nexport default RightSideBar;\n","import s from './rightSideBar.module.css';\nimport CustomButton from 'components/CustomButton/CustomButton';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getGraphData } from '../../redux/user/userOperations';\nimport GraphModal from 'components/Modal/GraphModal';\n\n\nexport const Stats = ({ calculator, progressData }) => {\n  const dispatch = useDispatch();\n  const [modalState, setModalState] = useState({\n    open: false,\n    data: null,\n  });\n\n  const showGraph = async () => {\n    const grpthDates = {\n      todayDate: new Date(),\n    }\n    const result = await dispatch(getGraphData(grpthDates));\n    setModalState(prev => {\n      return {\n        ...prev,\n        open: true,\n        data: result\n      };\n    });\n  };\n\n  const handleModalClose = () => {\n    setModalState(prev => {\n      return {\n        ...prev,\n        open: false,\n      };\n    });\n    setTimeout(() => {\n      // fixing effect, when during closing modal you see 0 kcal recommended daily calorie intake\n      setModalState({ open: false, dailyRate: null, foodNotToEat: [] });\n    }, 250);\n  };\n  return (\n    <div>\n\n      {calculator.startDate ? (\n        <div className={s.sideBarContentWrapper}>\n          <div className={s.sideBarContent}>\n            <CustomButton\n              color=\"orange\"\n              size=\"graph\"\n              onClick={showGraph}\n            >\n              graphs\n            </CustomButton>\n            <p className={s.sideBarTitle}>Your stats</p>\n            <ul className={s.statsBox}>\n              <li className={s.statsBoxItem}>\n                <p>Height</p>\n                <p>\n                  {calculator.height\n                    ? `${calculator.height} cm`\n                    : calculator.heightFeet && calculator.heightInch\n                      ? `${calculator.heightFeet} ft ${calculator.heightInch} in`\n                      : 'Height data not available'}\n                </p>\n              </li>\n              <li className={s.statsBoxItem}>\n                <p>Age</p>\n                <p>{calculator.age} years young</p>\n              </li>\n              <li className={s.statsBoxItem}>\n                <p>Current Weight</p>\n                <p>\n                  {calculator.currentWeight\n                    ? `${calculator.currentWeight} kg`\n                    : calculator.currentWeightLbs\n                      ? `${calculator.currentWeightLbs} lbs`\n                      : 'Current weight data not available'}\n                </p>\n              </li>\n              <li className={s.statsBoxItem}>\n                <p>Desired Weight</p>\n                <p>\n                  {calculator.desiredWeight\n                    ? `${calculator.desiredWeight} kg`\n                    : calculator.desiredWeightLbs\n                      ? `${calculator.desiredWeightLbs} lbs`\n                      : 'Desired weight data not available'}\n                </p>\n              </li>\n              <li className={s.statsBoxItem}>\n                <p>Blood Type</p>\n                <p>{calculator.bloodType}</p>\n              </li>\n            </ul>\n          </div>\n          <div className={s.sideBarContent}>\n            <p className={s.sideBarTitle}>Your progress</p>\n            <ul className={s.statsBox}>\n              <li className={s.statsBoxItem}>\n                <p>Started Date</p>\n                <p>{progressData.originalDate}</p>\n              </li>\n              <li className={s.statsBoxItem}>\n                <p>Starting Weight</p>\n                <p>\n                  {calculator.unitOfMeasure === 'M'\n                    ? `${calculator.originalWeight} kg`\n                    : calculator.unitOfMeasure === 'S'\n                      ? `${calculator.originalWeight} lbs`\n                      : 'Starting weight data not available'}\n                </p>\n              </li>\n              <li className={s.statsBoxItem}>\n                <p>Weight Lost</p>\n                {calculator.unitOfMeasure === 'M'\n                  ? `${progressData.lost.toFixed(2)} kg`\n                  : calculator.unitOfMeasure === 'S'\n                    ? `${progressData.lost.toFixed(2)} lbs`\n                    : 'Lost weight data not available'}\n              </li>\n              <li className={s.statsBoxItem}>\n                <p>Days Tracking</p>\n                <p>{progressData.inDays} days</p>\n              </li>\n            </ul>\n            {progressData.reachedGoal && (\n              <p className={s.sideBarTitle}>You reached your goal!</p>\n            )}\n          </div>\n        </div>\n      ) : (\n        <div className={s.sideBarContentWrapper}>\n          <div className={s.sideBarContent}>\n            <p className={s.sideBarTitle}>\n              Please complete the stats to begin tracking your journey\n            </p>\n          </div>\n        </div>\n      )}\n      {modalState.data &&\n        <GraphModal handleModalClose={handleModalClose} modalState={modalState} />\n      }\n    </div>\n  );\n};\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport { Stats } from './Stats';\n\nexport const StatsContainer = ({ calculator }) => {\n  const startDate = dayjs(calculator.startDate, 'MM-DD-YYYY');\n  const goalWeight = calculator.currentWeight ||\n    calculator.currentWeightLbs;\n\n  const lost = () => {\n    if (calculator.unitOfMeasure === 'M') {\n      if (\n        calculator.originalWeight !== null &&\n        calculator.currentWeight !== null\n      ) {\n        return Math.abs(calculator.originalWeight - calculator.currentWeight);\n      }\n    } else if (calculator.unitOfMeasure === 'S') {\n      if (\n        calculator.originalWeight !== null &&\n        calculator.currentWeightLbs !== null\n      ) {\n        return Math.abs(\n          calculator.originalWeight - calculator.currentWeightLbs\n        );\n      }\n    }\n    return 0;\n  };\n  const progressData = {\n    originalDate: dayjs(calculator.startDate)\n      .format('MM-DD-YYYY')\n      .replaceAll('-', '/'),\n    originalWeight: calculator.originalWeight,\n    lost: lost(),\n    inDays: dayjs().diff(startDate, 'day'),\n    reachedGoal: calculator.desired <= goalWeight,\n  };\n\n  return <Stats calculator={calculator} progressData={progressData} />;\n};\n","// external\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Container from 'components/Container/Container';\nimport { Paper } from '@mui/material';\n\n// internal\nimport RightSideBar from 'components/RightSideBar/RightSideBar';\nimport CaloriesCalc from 'components/CaloriesCalc/CaloriesCalc';\nimport { StatsContainer } from 'components/RightSideBar/StatsContainer';\nimport s from '../../components/RightSideBar/rightSideBar.module.css'\nimport { selectThemeMode } from 'redux/theme/themeSelectors';\n\nfunction Calculator() {\n  const themeMode = useSelector(selectThemeMode);\n  return (\n    <div\n      className=\"background Calc-DairyBackground\"\n      style={{ display: 'flex', flexDirection: 'column'}}\n    >\n      <section className=\"top-bottom\">\n        <Container className=\"left-right\">\n          <CaloriesCalc />\n          {/* <NotAllowedProducts />*/}\n        </Container>\n      </section>\n      <section className=\"no-bottom\">\n        <Container className=\"no-left-right\">\n          <Paper className={`${s.sidebarBox} ${themeMode === 'dark' ? s.darkMode : s.lightMode}`}/>\n            <RightSideBar>\n              <StatsContainer />\n          </RightSideBar>\n        </Container>\n      </section>\n    </div>\n  );\n}\n\nexport default Calculator;\n","// extracted by mini-css-extract-plugin\nexport default {\"sideBarContainer\":\"rightSideBar_sideBarContainer__rWrUX\",\"sidebarBox\":\"rightSideBar_sidebarBox__q9pRQ\",\"sideBarContentWrapper\":\"rightSideBar_sideBarContentWrapper__EDhJV\",\"sideBarContent\":\"rightSideBar_sideBarContent__TIFBc\",\"sideBarTitle\":\"rightSideBar_sideBarTitle__1pky6\",\"statsBox\":\"rightSideBar_statsBox__0Xanq\",\"statsBoxItem\":\"rightSideBar_statsBoxItem__Vk8lb\"};"],"names":["Transition","forwardRef","props","ref","direction","handleModalClose","modalState","graphCalcDates","data","payload","grapCalcData","graphCalcData","grapDairyhData","graphDiaryDates","PaperProps","sx","minWidth","maxWidth","maxHeight","minHeight","open","TransitionComponent","keepMounted","onClose","id","style","height","width","xAxis","label","scaleType","series","color","onClick","calculator","useUser","className","s","React","children","Stats","progressData","dispatch","useDispatch","useState","setModalState","showGraph","grpthDates","todayDate","Date","getGraphData","result","prev","startDate","CustomButton","size","heightFeet","heightInch","age","currentWeight","currentWeightLbs","desiredWeight","desiredWeightLbs","bloodType","originalDate","unitOfMeasure","originalWeight","lost","toFixed","inDays","reachedGoal","GraphModal","setTimeout","dailyRate","foodNotToEat","StatsContainer","dayjs","goalWeight","format","replaceAll","Math","abs","diff","desired","themeMode","useSelector","selectThemeMode","display","flexDirection","Container","CaloriesCalc","Paper","RightSideBar"],"sourceRoot":""}