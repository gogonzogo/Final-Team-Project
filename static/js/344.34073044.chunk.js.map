{"version":3,"file":"static/js/344.34073044.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","components/ValidationPopup/ValidationPopup.module.css","components/ValidationPopup/ValidationPopup.js","webpack://final-team-project/./src/components/RegistrationForm/RegistrationForm.module.css?5637","components/RegistrationForm/RegistrationForm.jsx","pages/Register/Register.jsx","redux/validation/registrationSelectors.js","../node_modules/@mui/icons-material/CheckCircleOutline.js","../node_modules/@mui/icons-material/ErrorOutline.js"],"sourcesContent":["import { node, string } from 'prop-types';\n\nconst Container = ({children, className}) => {\n    return (\n        <div className={className}>{children}</div>\n    )\n};\n\nContainer.propTopes = {\n    children: node.isRequired,\n    className: string\n};\n\nexport default Container ;","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport { Paper, List, ListItem, ListItemText } from '@mui/material';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport css from './ValidationPopup.module.css';\n\nconst ValidationPopup = ({ validationData, visible }) => {\n  return (\n    <Paper elevation={8} className={css.validationPopup}>\n      <List className={css.validationPopupList} sx={{ width: '100%', maxWidth: 360 }}>\n        {visible && validationData\n          ? validationData.map((item, index) => {\n              const reqKey = Object.keys(item)[0];\n              const { id, message, met } = item[reqKey];\n              const IconComponent = met ? CheckCircleOutlineIcon : ErrorOutlineIcon;\n              const iconColor = met ? 'green' : 'red';\n              return (\n                <ListItem className={css.validationPopupItem} key={id} disableGutters>\n                  <IconComponent className={css.validationPopupIcon} style={{ color: iconColor }} />\n                  <ListItemText disableTypography primary={message} sx={{ fontSize: '12px' }} />\n                </ListItem>\n              );\n            })\n          : null}\n      </List>\n    </Paper>\n  );\n};\n\nexport default ValidationPopup;","// extracted by mini-css-extract-plugin\nexport default {\"password_input\":\"RegistrationForm_password_input__YljM2\",\"email_input\":\"RegistrationForm_email_input__0+Pum\",\"name_input\":\"RegistrationForm_name_input__n3sjp\",\"form_container\":\"RegistrationForm_form_container__sZfTu\",\"form_title\":\"RegistrationForm_form_title__W3JXl\",\"form_grid\":\"RegistrationForm_form_grid__jv6mY\",\"button_container\":\"RegistrationForm_button_container__0kjAW\"};","import React, { useState, useRef } from 'react';\nimport { Box, FormControl, TextField, Grid } from '@mui/material';\nimport style from './RegistrationForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  validateEmail,\n  validateName,\n  validatePassword,\n} from '../../redux/validation/registrationSlice';\nimport ValidationPopup from '../ValidationPopup/ValidationPopup';\nimport {\n  selectFormIsValid,\n  selectIsEmailValid,\n  selectIsPasswordValid,\n  selectIsNameValid,\n} from '../../redux/validation/registrationSelectors';\nimport { register } from 'redux/auth/authOperations';\nimport { useNavigate } from 'react-router-dom';\nimport CustomButton from 'components/CustomButton/CustomButton';\nimport { useAuth } from 'hooks/useAuth';\n\nconst RegistrationForm = () => {\n  const emailRef = useRef(null);\n  const passwordRef = useRef(null);\n  const { loggedIn } = useAuth();\n  const isEmailValid = useSelector(selectIsEmailValid);\n  const isPasswordValid = useSelector(selectIsPasswordValid);\n  const isNameValid = useSelector(selectIsNameValid);\n  const isFormValid = useSelector(selectFormIsValid);\n  const validationReqs = useSelector(\n    state => state.registration.validationReqs\n  );\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [validationPopups, setValidationPopups] = useState({\n    name: false,\n    email: false,\n    password: false,\n  });\n  const [focusedField, setFocusedField] = useState(null);\n  const toggleValidationPopup = (fieldName, visible) => {\n    setValidationPopups({ ...validationPopups, [fieldName]: visible });\n  };\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n  const resetForm = () => {\n    setFormData({\n      name: '',\n      email: '',\n      password: '',\n    });\n    dispatch(validateName({ fieldValue: '' }));\n    dispatch(validateEmail({ fieldValue: '' }));\n    dispatch(validatePassword({ fieldValue: '' }));\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n\n    switch (\n      name\n    ) {\n      case 'name':\n        dispatch(validateName({ fieldValue: value }));\n        break;\n      case 'email':\n        dispatch(validateEmail({ fieldValue: value.toLowerCase() }));\n        break;\n      case 'password':\n        dispatch(validatePassword({ fieldValue: value }));\n        break;\n      default:\n        break;\n    }\n    setFocusedField(name);\n    toggleValidationPopup(name, true);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n        const { name, email, password } = formData;\n        const senddate = { name, email: email.toLowerCase(), password };\n        dispatch(register(senddate));\n        if (loggedIn) {\n          resetForm();\n          navigate('/calculator');\n        }\n    } catch (error) {\n      throw new Error()\n    }\n  };\n\n  return (\n    <Box sx={{ width: '100%' }} className={style.form_container}>\n      <h2 className={style.form_title}>REGISTER</h2>\n      <Grid className={style.form_grid}>\n        <FormControl variant=\"standard\">\n          <form onSubmit={handleSubmit} noValidate>\n            <TextField\n              className={style.name_input}\n              autoComplete=\"name\"\n              InputLabelProps={\n                focusedField === 'name' && !isNameValid\n                  ? { style: { color: 'red' } }\n                  : { style: { color: '#9B9FAA' } }\n              }\n              inputProps={{\n                onKeyPress: event => {\n                  const { key } = event;\n                  if (key === 'Enter') {\n                    emailRef.current.focus();\n                  }\n                },\n              }}\n              variant=\"standard\"\n              label={'Name *'}\n              type=\"text\"\n              name=\"name\"\n              fullWidth\n              margin=\"normal\"\n              value={formData.name}\n              onChange={handleChange}\n              onFocus={() => setFocusedField('name')}\n              onBlur={() => setFocusedField(null)}\n              error={focusedField === 'name' && !isNameValid}\n              //  helperText={focusedField === 'name' && formData.name.length >= 3 ? <span>  {renderValidationPopup()}</span> : null}\n              //error={!formData.name && nameValidationReqs.some((req) => !req.met)}\n            />\n            {focusedField === 'name' && (\n              <ValidationPopup\n                validationData={validationReqs[focusedField]}\n                visible={focusedField}\n              />\n            )}\n            <TextField\n              className={style.email_input}\n              autoComplete=\"email\"\n              InputLabelProps={\n                focusedField === 'email' && !isEmailValid\n                  ? { style: { color: 'red' } }\n                  : { style: { color: '#9B9FAA' } }\n              }\n              inputRef={emailRef}\n              inputProps={{\n                onKeyPress: event => {\n                  const { key } = event;\n                  if (key === 'Enter') {\n                    passwordRef.current.focus();\n                  }\n                },\n              }}\n              variant=\"standard\"\n              label={'Email *'}\n              type=\"email\"\n              name=\"email\"\n              fullWidth\n              margin=\"normal\"\n              value={formData.email}\n              onChange={handleChange}\n              onFocus={() => setFocusedField('email')}\n              onBlur={() => setFocusedField(null)}\n              error={focusedField === 'email' && !isEmailValid}\n              //  helperText={focusedField === 'email' && formData.email.length >= 3 ? <span>  {renderValidationPopup()}</span> : null}\n              //error={!formData.email && emailValidationReqs.some((req) => !req.met)}\n            />\n            {focusedField === 'email' && (\n              <ValidationPopup\n                validationData={validationReqs[focusedField]}\n                visible={focusedField}\n              />\n            )}\n            <TextField\n              className={style.password_input}\n              autoComplete=\"current-password\"\n              InputLabelProps={\n                focusedField === 'password' && !isPasswordValid\n                  ? { style: { color: 'red' } }\n                  : { style: { color: '#9B9FAA' } }\n              }\n              inputRef={passwordRef}\n              variant=\"standard\"\n              label={'Password *'}\n              type=\"password\"\n              name=\"password\"\n              fullWidth\n              margin=\"normal\"\n              value={formData.password}\n              onChange={handleChange}\n              onFocus={() => setFocusedField('password')}\n              onBlur={() => setFocusedField(null)}\n              error={focusedField === 'password' && !isPasswordValid}\n              //  helperText={focusedField === 'password' && formData.password.length >= 3 ? <span>{(renderValidationPopup())}</span> : null}\n              //  error={!formData.password}\n            />\n            {focusedField === 'password' && (\n              <ValidationPopup\n                validationData={validationReqs[focusedField]}\n                visible={focusedField}\n              />\n            )}\n            <Box className={style.button_container}>\n              <CustomButton color=\"orange\" disabled={!isFormValid}>\n                Register\n              </CustomButton>\n            </Box>\n          </form>\n        </FormControl>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default RegistrationForm;\n","import React from 'react';\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\nimport Container from 'components/Container/Container';\n\nfunction Register() {\n  return (\n    <div className=\" background mainBackground\">\n      <section className=\"top-bottom\">\n        <Container className=\"left-right\">\n          <RegistrationForm/>\n        </Container>\n      </section>\n     \n    </div>\n  )\n}\n\nexport default Register","import { createSelector } from 'reselect';\n\n// Select the registration slice from the Redux store\nconst selectRegistration = (state) => state.registration;\n\n// Select individual validation requirements\nexport const selectNameValidationReqs = createSelector(\n  [selectRegistration],\n  (registration) => registration.validationReqs.name\n);\n\nexport const selectEmailValidationReqs = createSelector(\n  [selectRegistration],\n  (registration) => registration.validationReqs.email\n);\n\nexport const selectPasswordValidationReqs = createSelector(\n  [selectRegistration],\n  (registration) => registration.validationReqs.password\n);\n\n// Select individual field validation states - this works then?\nexport const selectIsNameValid = createSelector(\n  [selectRegistration],\n  (registration) => registration.isNameValid \n);\n\nexport const selectIsEmailValid = createSelector(\n  [selectRegistration],\n  (registration) => registration.isEmailValid \n);\n\nexport const selectIsPasswordValid = createSelector(\n  [selectRegistration],\n  (registration) => registration.isPasswordValid \n);\n\n// Select the overall form validity\nexport const selectFormIsValid = createSelector(\n  [selectIsNameValid, selectIsEmailValid, selectIsPasswordValid],\n  (isNameValid, isEmailValid, isPasswordValid) =>\n    isNameValid && isEmailValid && isPasswordValid\n);","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.59 7.58 10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'CheckCircleOutline');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');\nexports.default = _default;"],"names":["Container","children","className","propTopes","node","string","validationData","visible","Paper","elevation","css","List","sx","width","maxWidth","map","item","index","Object","keys","id","message","met","IconComponent","CheckCircleOutlineIcon","ErrorOutlineIcon","iconColor","ListItem","disableGutters","style","color","ListItemText","disableTypography","primary","fontSize","emailRef","useRef","passwordRef","loggedIn","useAuth","isEmailValid","useSelector","selectIsEmailValid","isPasswordValid","selectIsPasswordValid","isNameValid","selectIsNameValid","isFormValid","selectFormIsValid","validationReqs","state","registration","navigate","useNavigate","dispatch","useDispatch","useState","name","email","password","validationPopups","setValidationPopups","focusedField","setFocusedField","formData","setFormData","handleChange","e","fieldName","target","value","validateName","fieldValue","validateEmail","toLowerCase","validatePassword","handleSubmit","preventDefault","senddate","register","Error","Box","Grid","FormControl","variant","onSubmit","noValidate","TextField","autoComplete","InputLabelProps","inputProps","onKeyPress","event","key","current","focus","label","type","fullWidth","margin","onChange","onFocus","onBlur","error","ValidationPopup","inputRef","CustomButton","disabled","selectRegistration","createSelector","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}