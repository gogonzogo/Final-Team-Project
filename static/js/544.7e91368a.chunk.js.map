{"version":3,"file":"static/js/544.7e91368a.chunk.js","mappings":"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","sources":["webpack://final-team-project/./src/components/CaloriesCalc/CaloriesCalc.module.css?baa3","webpack://final-team-project/./src/components/Modal/modal.module.css?1a55","components/Modal/Modal.jsx","components/CaloriesCalc/CaloriesCalc.jsx","components/ValidationPopup/ValidationPopup.module.css","components/ValidationPopup/ValidationPopup.js","pages/Home/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"CaloriesCalc_section__WB2nl\",\"calcWrapper\":\"CaloriesCalc_calcWrapper__AcODC\",\"heading\":\"CaloriesCalc_heading__fAzfD\",\"formdiv\":\"CaloriesCalc_formdiv__+a6k+\",\"calcform\":\"CaloriesCalc_calcform__iDf5l\",\"positionWrapper\":\"CaloriesCalc_positionWrapper__+O-50\"};","// extracted by mini-css-extract-plugin\nexport default {\"modalBox\":\"modal_modalBox__UnNX8\",\"closeButton\":\"modal_closeButton__hYa4+\",\"backButtonMobbile\":\"modal_backButtonMobbile__r5QHQ\",\"back\":\"modal_back__V8JNM\",\"modalTitle\":\"modal_modalTitle__3zeL5\",\"totalCaloriesNumber\":\"modal_totalCaloriesNumber__bUxLg\",\"totalCalories\":\"modal_totalCalories__U80Ut\",\"notEat\":\"modal_notEat__P-szP\",\"hr\":\"modal_hr__CzLPQ\",\"text2\":\"modal_text2__9c6ek\",\"notEatItem\":\"modal_notEatItem__hXM4C\",\"buttonWrapper\":\"modal_buttonWrapper__NZCpm\",\"button\":\"modal_button__GRC0s\"};","import {\n  Backdrop,\n  Box,\n  Button,\n  Fade,\n  Modal as MaterialModal,\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport s from './modal.module.css';\n\nconst Modal = props => {\n  const { handleClose, modalState } = props;\n  return (\n    <MaterialModal\n      open={modalState.open}\n      onClose={handleClose}\n      closeAfterTransition\n      slots={{ backdrop: Backdrop }}\n      slotProps={{\n        backdrop: {\n          timeout: 500,\n          sx: { backgroundColor: '#2121211f' },\n        },\n      }}\n    >\n      <Fade in={modalState.open}>\n        <Box>\n          <div className={s.backButtonMobbile}>\n            <span className={s.back} onClick={handleClose}>\n              ⏎\n            </span>\n          </div>\n          <div className={s.modalBox}>\n            <span className={s.closeButton} onClick={handleClose}>\n              ✕\n            </span>\n            <p className={s.modalTitle}>\n              Your recommended daily\n              <br /> calorie intake is\n            </p>\n            <b className={s.totalCalories}>\n              <span className={s.totalCaloriesNumber}>\n                {Math.round(modalState.totalCalories)}{' '}\n              </span>\n              kcal\n            </b>\n            <div className={s.notEat}>\n              <hr className={s.hr} />\n              <b className={s.text2}>Foods you should not eat</b>\n              <ol>\n                {modalState.foodNotToEat.map(listItem => (\n                  <li className={s.notEatItem} key={listItem}>\n                    {listItem}\n                  </li>\n                ))}\n              </ol>\n              <Link to=\"Login\" className={s.buttonWrapper}>\n                <Button className={s.button} variant=\"contained\">\n                  Start losing weight\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </Box>\n      </Fade>\n    </MaterialModal>\n  );\n};\nexport default Modal;\n","import React from 'react';\nimport css from './CaloriesCalc.module.css';\nimport { useState } from 'react';\nimport {useSelector, useDispatch } from 'react-redux';\n\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n// import FormControl from '@mui/material/FormControl';\nimport FormLabel from '@mui/material/FormLabel';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Modal from 'components/Modal/Modal';\nimport ValidationPopup from '../ValidationPopup/ValidationPopup';\nimport { validateHeight, validateAge, validateCurrent, validateDesired, validateBlood }\nfrom '../../redux/validation/calculateCalsSlice'\nimport  { storeCalulator } from '../../redux/Calc/calcSlice'\n\nconst CaloriesCalc = () => {\n  const dispatch = useDispatch();\n  const validHeight = useSelector((state) => state.calculate.isHeightValid)\n  const validAge = useSelector(state => state.calculate.isAgeValid)\n  const validcurrent = useSelector(state => state.calculate.isCurrentValid)\n  const validDesired = useSelector(state => state.calculate.isDesiredValid)\n  const validBlood = useSelector(state => state.calculate.isBloodValid)\n  const isFormValid = validHeight && validAge && validcurrent && validDesired && validBlood ? true : false \n\n  const returnedCal = useSelector((state) => state.calCalories.value);\n  \n  const [validationPopups, setValidationPopups] = useState({\n    weight: false,\n    age: false,\n    currentWeight: false,\n    desiredWeight: false,\n    bloodType: false\n  });\n  const [focusedField, setFocusedField] = useState(null);\n\n  const toggleValidationPopup = (fieldName, visible) => {\n    setValidationPopups({ ...validationPopups, [fieldName]: visible });\n    console.log('isFormValid', isFormValid)\n  };\n\n    const validationReqs = useSelector((state) => state.calculate.validationReqs);\n\n\n  const [modalState, setModalState] = useState({\n    open: false,\n    totalCalories: null,\n    foodNotToEat: [],\n  }); //modal state and setters\n\n  const handleOpen = totalCalories => {\n    setModalState({\n      open: true,\n      totalCalories: totalCalories,\n      foodNotToEat: ['give', 'me', 'food'], //  change me\n    });\n  };\n  const handleClose = () => {\n    setModalState(prev => {\n      return {\n        ...prev,\n        open: false,\n      };\n    });\n    setTimeout(() => {\n      // fixing effect, when during closing modal you see 0 kcal recommended daily calorie intake\n      setModalState({ open: false, totalCalories: null, foodNotToEat: [] });\n    }, 250);\n  };\n\n  const [formData, setFormData] = useState({\n     height: returnedCal.height,\n    age: returnedCal.age,\n    currentWeight: returnedCal.currentWeight,\n    desiredWeight: returnedCal.desiredWeight,\n    bloodType: returnedCal.bloodType,\n  });\n\n  const changeHandler = e => {\nconst { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    })\n  switch (name) {\n    case 'height':\n      dispatch(validateHeight({ fieldValue: value }));\n        break;\n    case 'age':\n      dispatch(validateAge({ fieldValue: value }));\n        break;\n    case 'currentWeight':\n      dispatch(validateCurrent({ fieldValue: value }));\n        break;\n    case 'desiredWeight':\n      dispatch(validateDesired({ fieldValue: value }));\n      break;\n    case 'bloodType':\n      dispatch(validateBlood({ fieldValue: value }));\n      // console.log('bloodType' )\n      break;\n    default:\n        break;\n    }\n    setFocusedField(name);\n    toggleValidationPopup(name, true);\n  };\n\n  const renderValidationPopup = () => {\n    console.log('focusedField', focusedField)\n    return (\n      <ValidationPopup\n        validationData={validationReqs[focusedField]}\n        visible={!!focusedField}\n      />\n    );\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const {height, age, currentWeight, desiredWeight, bloodType} = formData\n    const totalCalories =\n      10 * currentWeight +\n      6.25 * height -\n      5 * age -\n      161 -\n      10 * (currentWeight - desiredWeight);\n    \ndispatch(storeCalulator({height: height, age: age, currentWeight: currentWeight, desiredWeight: desiredWeight, bloodType: bloodType }) )\n\n    handleOpen(totalCalories); // give me food\n  };\n\n  return (\n    <>\n      <div className={css.positionWrapper}>\n        <div className={css.section}>\n          <div className={css.calcWrapper}>\n            <h1 className={css.heading}>Calculate your daily calorie</h1>\n            <h1 className={css.heading}>intake right now</h1>\n\n            <form className={css.calcform} onSubmit={submitHandler}>\n              <div className={css.formdiv}>\n                <TextField\n                  sx={{\n                    fontFamily: 'Verdana',\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    lineHeight: '17px',\n                    letterSpacing: '0.04em',\n                    textAlign: 'left',\n                    width: '240px',\n                    paddingRight: '32px',\n                  }}\n                                InputLabelProps={{ style: { color: \"#9B9FAA\" } }}\n\n                  type=\"tel\"\n                  inputprops={{ inputprops: { min: 122, max: 214 } }}\n                  label=\"Height *\"\n                  variant=\"standard\"\n                  onChange={changeHandler}\n                  value={formData.height}\n                  name=\"height\"\n              onFocus={() => setFocusedField('height')}\n              onBlur={() => setFocusedField(null)}\n                />\n                <TextField\n                  sx={{\n                    fontFamily: 'Verdana',\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    lineHeight: '17px',\n                    letterSpacing: '0.04em',\n                    textAlign: 'left',\n                    width: '240px',\n                    paddingRight: '32px',\n                  }}\n                  InputLabelProps={{ style: { color: \"#9B9FAA\" } }}\n                  type=\"tel\"\n                  inputprops={{ inputprops: { min: 18, max: 80 } }}\n                  label=\"Age\"\n                  variant=\"standard\"\n                  onChange={changeHandler}\n                  value={formData.age}\n                  name=\"age\"\n                  onFocus={() => setFocusedField('age')}\n              onBlur={() => setFocusedField(null)}\n                />\n                <TextField\n                  sx={{\n                    fontFamily: 'Verdana',\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    lineHeight: '17px',\n                    letterSpacing: '0.04em',\n                    textAlign: 'left',\n                    width: '240px',\n                    paddingRight: '32px',\n                  }}\n                                InputLabelProps={{ style: { color: \"#9B9FAA\" } }}\n\n                  type=\"tel\"\n                  inputprops={{ inputprops: { min: 34, max: 181 } }}\n                  label=\"Current Weight\"\n                  variant=\"standard\"\n                  onChange={changeHandler}\n                  value={formData.currentWeight}\n                  name=\"currentWeight\"\n                  onFocus={() => setFocusedField('currentWeight')}\n              onBlur={() => setFocusedField(null)}\n                />\n              </div>\n              <div className={css.formdiv}>\n                <TextField\n                  sx={{\n                    fontFamily: 'Verdana',\n                    fontSize: '14px',\n                    fontWeight: '700',\n                    lineHeight: '17px',\n                    letterSpacing: '0.04em',\n                    textAlign: 'left',\n                    width: '240px',\n                    paddingRight: '32px',\n                  }}\n                                InputLabelProps={{ style: { color: \"#9B9FAA\" } }}\n\n                  type=\"tel\"\n                  inputprops={{ inputprops: { min: 34, max: 181 } }}\n                  label=\"Desired Weight\"\n                  variant=\"standard\"\n                  onChange={changeHandler}\n                  value={formData.desiredWeight}\n                  name=\"desiredWeight\"\n                  onFocus={() => setFocusedField('desiredWeight')}\n              onBlur={() => setFocusedField(null)}\n                />\n                <FormLabel id=\"demo-radio-buttons-group-label\">\n                  Blood Type\n                </FormLabel>\n\n                <RadioGroup\n                  aria-labelledby=\"demo-controlled-radio-buttons-group\"\n                  value={formData.bloodType}\n                  name=\"bloodType\"\n                  sx={{\n                    flexDirection: 'row',\n                  }}\n                  onChange={changeHandler}\n              onFocus={() => setFocusedField('bloodType')}\n              onBlur={() => setFocusedField(null)}\n                >\n                  <FormControlLabel\n                    value=\"A\"\n                    control={<Radio  sx={{\n          '&.Mui-checked': {\n            color: '#FC842D',\n          },\n        }} />}\n                    label=\"A\"\n                  />\n                  <FormControlLabel\n                    value=\"B\"\n                    control={<Radio sx={{\n          '&.Mui-checked': {\n            color: '#FC842D',\n          },\n        }} />}\n                    label=\"B\"\n                  />\n                  <FormControlLabel\n                    value=\"AB\"\n                    control={<Radio  sx={{\n          '&.Mui-checked': {\n            color: '#FC842D',\n          },\n        }}/>}\n                    label=\"AB\"\n                  />\n                  <FormControlLabel\n                    value=\"O\"\n                    control={<Radio  sx={{\n          '&.Mui-checked': {\n            color: '#FC842D',\n          },\n        }}/>}\n                    label=\"O\"\n                  />\n                </RadioGroup>\n              </div>\n\n              {renderValidationPopup()}\n\n              <Button\n                sx={{\n                  margin: '40px 0',\n                  backgroundColor: '#FC842D',\n                  width: '210px',\n                  height: '43px',\n                  dropShadow: '50% #FC842D80',\n                  borderRadius: '30px',\n                  fontFamily: 'Verdana',\n                  fontSize: '14px',\n                  fontWeight: '700',\n                  lineHeight: '17px',\n                  letterSpacing: '0.04em',\n                  textAlign: 'center',\n                  color: '#FFFFFF',\n                }}\n                type=\"submit\"\n                variant=\"contained\"\n                disabled={!isFormValid}\n              >\n                Start losing weight\n              </Button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <Modal handleClose={handleClose} modalState={modalState} />\n    </>\n  );\n};\n\nexport default CaloriesCalc;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport { Paper, List, ListItem, ListItemText } from '@mui/material';\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline';\nimport css from './ValidationPopup.module.css';\n\nconst ValidationPopup = ({ validationData, visible }) => {\n  return (\n    <Paper elevation={8} className={css.validationPopup}>\n      <List className={css.validationPopupList} sx={{ width: '100%', maxWidth: 360 }}>\n        {visible && validationData\n          ? validationData.map((item, index) => {\n              const reqKey = Object.keys(item)[0];\n              const { id, message, met } = item[reqKey];\n              const IconComponent = met ? CheckCircleOutlineIcon : ErrorOutlineIcon;\n              const iconColor = met ? 'green' : 'red';\n              return (\n                <ListItem className={css.validationPopupItem} key={id} disableGutters>\n                  <IconComponent className={css.validationPopupIcon} style={{ color: iconColor }} />\n                  <ListItemText disableTypography primary={message} sx={{ fontSize: '12px' }} />\n                </ListItem>\n              );\n            })\n          : null}\n      </List>\n    </Paper>\n  );\n};\n\nexport default ValidationPopup;","import CaloriesCalc from 'components/CaloriesCalc/CaloriesCalc';\nimport React from 'react';\nimport { Outlet } from 'react-router-dom';\n\n// import { lazy, Suspense } from 'react';\n// import Loader from 'components/Loader/Loader';\n// const Register = lazy(() => import('../Register/Register'));\n// const Login = lazy(() => import('../Login/Login'));\n\nfunction Home() {\n  return (\n    <div className=\" background mainBackground\">\n      <CaloriesCalc />\n      <Outlet />\n      {/* <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"register\" element={<Register />} />\n          <Route path=\"login\" element={<Login />} />\n        </Routes>\n      </Suspense> */}\n    </div>\n  );\n}\n\nexport default Home;\n"],"names":["props","handleClose","modalState","open","onClose","closeAfterTransition","slots","backdrop","Backdrop","slotProps","timeout","sx","backgroundColor","Fade","in","Box","className","s","onClick","Math","round","totalCalories","foodNotToEat","map","listItem","to","Button","variant","dispatch","useDispatch","validHeight","useSelector","state","calculate","isHeightValid","validAge","isAgeValid","validcurrent","isCurrentValid","validDesired","isDesiredValid","validBlood","isBloodValid","isFormValid","returnedCal","calCalories","value","useState","weight","age","currentWeight","desiredWeight","bloodType","validationPopups","setValidationPopups","focusedField","setFocusedField","validationReqs","setModalState","height","formData","setFormData","changeHandler","e","fieldName","visible","target","name","validateHeight","fieldValue","validateAge","validateCurrent","validateDesired","validateBlood","console","log","css","onSubmit","preventDefault","storeCalulator","handleOpen","TextField","fontFamily","fontSize","fontWeight","lineHeight","letterSpacing","textAlign","width","paddingRight","InputLabelProps","style","color","type","inputprops","min","max","label","onChange","onFocus","onBlur","FormLabel","id","RadioGroup","flexDirection","FormControlLabel","control","Radio","ValidationPopup","validationData","margin","dropShadow","borderRadius","disabled","prev","setTimeout","Paper","elevation","List","maxWidth","item","index","Object","keys","message","met","IconComponent","CheckCircleOutlineIcon","ErrorOutlineIcon","iconColor","ListItem","disableGutters","ListItemText","disableTypography","primary"],"sourceRoot":""}